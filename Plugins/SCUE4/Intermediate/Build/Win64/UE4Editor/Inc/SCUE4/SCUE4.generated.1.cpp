// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "SCUE4.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1SCUE4() {}
class UScriptStruct* FSafeTransform::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeTransform();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeTransform_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeTransform, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeTransform"), sizeof(FSafeTransform), Get_Z_Construct_UScriptStruct_FSafeTransform_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeTransform(FSafeTransform::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeTransform"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeTransform
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeTransform()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeTransform")),new UScriptStruct::TCppStructOps<FSafeTransform>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeTransform;
class UScriptStruct* FSafeRotator::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeRotator();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeRotator_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeRotator, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeRotator"), sizeof(FSafeRotator), Get_Z_Construct_UScriptStruct_FSafeRotator_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeRotator(FSafeRotator::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeRotator"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeRotator
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeRotator()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeRotator")),new UScriptStruct::TCppStructOps<FSafeRotator>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeRotator;
class UScriptStruct* FSafeColor::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeColor();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeColor_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeColor, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeColor"), sizeof(FSafeColor), Get_Z_Construct_UScriptStruct_FSafeColor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeColor(FSafeColor::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeColor"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeColor
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeColor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeColor")),new UScriptStruct::TCppStructOps<FSafeColor>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeColor;
class UScriptStruct* FSafeVector4D::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeVector4D();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeVector4D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeVector4D, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeVector4D"), sizeof(FSafeVector4D), Get_Z_Construct_UScriptStruct_FSafeVector4D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeVector4D(FSafeVector4D::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeVector4D"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeVector4D
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeVector4D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeVector4D")),new UScriptStruct::TCppStructOps<FSafeVector4D>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeVector4D;
class UScriptStruct* FSafeVector3D::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeVector3D();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeVector3D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeVector3D, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeVector3D"), sizeof(FSafeVector3D), Get_Z_Construct_UScriptStruct_FSafeVector3D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeVector3D(FSafeVector3D::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeVector3D"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeVector3D
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeVector3D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeVector3D")),new UScriptStruct::TCppStructOps<FSafeVector3D>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeVector3D;
class UScriptStruct* FSafeVector2D::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeVector2D();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeVector2D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeVector2D, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeVector2D"), sizeof(FSafeVector2D), Get_Z_Construct_UScriptStruct_FSafeVector2D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeVector2D(FSafeVector2D::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeVector2D"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeVector2D
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeVector2D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeVector2D")),new UScriptStruct::TCppStructOps<FSafeVector2D>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeVector2D;
class UScriptStruct* FSafeText::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeText();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeText_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeText, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeText"), sizeof(FSafeText), Get_Z_Construct_UScriptStruct_FSafeText_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeText(FSafeText::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeText"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeText
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeText()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeText")),new UScriptStruct::TCppStructOps<FSafeText>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeText;
class UScriptStruct* FSafeString::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeString();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeString_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeString, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeString"), sizeof(FSafeString), Get_Z_Construct_UScriptStruct_FSafeString_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeString(FSafeString::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeString"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeString
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeString()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeString")),new UScriptStruct::TCppStructOps<FSafeString>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeString;
class UScriptStruct* FSafeName::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeName();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeName_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeName, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeName"), sizeof(FSafeName), Get_Z_Construct_UScriptStruct_FSafeName_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeName(FSafeName::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeName"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeName
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeName()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeName")),new UScriptStruct::TCppStructOps<FSafeName>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeName;
class UScriptStruct* FSafeFloat::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeFloat();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeFloat_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeFloat, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeFloat"), sizeof(FSafeFloat), Get_Z_Construct_UScriptStruct_FSafeFloat_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeFloat(FSafeFloat::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeFloat"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeFloat
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeFloat()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeFloat")),new UScriptStruct::TCppStructOps<FSafeFloat>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeFloat;
class UScriptStruct* FSafeInt::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeInt();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeInt_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeInt, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeInt"), sizeof(FSafeInt), Get_Z_Construct_UScriptStruct_FSafeInt_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeInt(FSafeInt::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeInt"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeInt
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeInt()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeInt")),new UScriptStruct::TCppStructOps<FSafeInt>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeInt;
class UScriptStruct* FSafeByte::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeByte();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeByte_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeByte, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeByte"), sizeof(FSafeByte), Get_Z_Construct_UScriptStruct_FSafeByte_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeByte(FSafeByte::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeByte"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeByte
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeByte()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeByte")),new UScriptStruct::TCppStructOps<FSafeByte>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeByte;
class UScriptStruct* FSafeBool::StaticStruct()
{
	extern SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeBool();
		extern SCUE4_API uint32 Get_Z_Construct_UScriptStruct_FSafeBool_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSafeBool, Z_Construct_UPackage__Script_SCUE4(), TEXT("SafeBool"), sizeof(FSafeBool), Get_Z_Construct_UScriptStruct_FSafeBool_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSafeBool(FSafeBool::StaticStruct, TEXT("/Script/SCUE4"), TEXT("SafeBool"), false, nullptr, nullptr);
static struct FScriptStruct_SCUE4_StaticRegisterNativesFSafeBool
{
	FScriptStruct_SCUE4_StaticRegisterNativesFSafeBool()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SafeBool")),new UScriptStruct::TCppStructOps<FSafeBool>);
	}
} ScriptStruct_SCUE4_StaticRegisterNativesFSafeBool;
	void USCUE4Settings::StaticRegisterNativesUSCUE4Settings()
	{
	}
	IMPLEMENT_CLASS(USCUE4Settings, 3923886233);
	void USafeGameInstance::StaticRegisterNativesUSafeGameInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(USafeGameInstance::StaticClass(), "HideGameGuardConsole",(Native)&USafeGameInstance::execHideGameGuardConsole);
	}
	IMPLEMENT_CLASS(USafeGameInstance, 4011207949);
	void USCLibrary::StaticRegisterNativesUSCLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeBool",(Native)&USCLibrary::execSCL_Callable_GetSafeBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeBoolWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeBoolWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeByte",(Native)&USCLibrary::execSCL_Callable_GetSafeByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeByteWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeByteWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeColor",(Native)&USCLibrary::execSCL_Callable_GetSafeColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeColorWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeColorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeFloat",(Native)&USCLibrary::execSCL_Callable_GetSafeFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeFloatWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeFloatWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeInt",(Native)&USCLibrary::execSCL_Callable_GetSafeInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeIntWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeIntWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeName",(Native)&USCLibrary::execSCL_Callable_GetSafeName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeNameWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeNameWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeRotator",(Native)&USCLibrary::execSCL_Callable_GetSafeRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeRotatorWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeRotatorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeString",(Native)&USCLibrary::execSCL_Callable_GetSafeString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeStringWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeStringWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeText",(Native)&USCLibrary::execSCL_Callable_GetSafeText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeTextWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeTextWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeTransform",(Native)&USCLibrary::execSCL_Callable_GetSafeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeTransformWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeTransformWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeVector2D",(Native)&USCLibrary::execSCL_Callable_GetSafeVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeVector2DWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeVector2DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeVector3D",(Native)&USCLibrary::execSCL_Callable_GetSafeVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeVector3DWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeVector3DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeVector4D",(Native)&USCLibrary::execSCL_Callable_GetSafeVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_GetSafeVector4DWithKey",(Native)&USCLibrary::execSCL_Callable_GetSafeVector4DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeBool",(Native)&USCLibrary::execSCL_Callable_SetSafeBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeBoolWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeBoolWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeByte",(Native)&USCLibrary::execSCL_Callable_SetSafeByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeByteWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeByteWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeColor",(Native)&USCLibrary::execSCL_Callable_SetSafeColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeColorWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeColorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeFloat",(Native)&USCLibrary::execSCL_Callable_SetSafeFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeFloatWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeFloatWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeInt",(Native)&USCLibrary::execSCL_Callable_SetSafeInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeIntWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeIntWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeName",(Native)&USCLibrary::execSCL_Callable_SetSafeName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeNameWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeNameWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeRotator",(Native)&USCLibrary::execSCL_Callable_SetSafeRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeRotatorWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeRotatorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeString",(Native)&USCLibrary::execSCL_Callable_SetSafeString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeStringWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeStringWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeText",(Native)&USCLibrary::execSCL_Callable_SetSafeText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeTextWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeTextWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeTransform",(Native)&USCLibrary::execSCL_Callable_SetSafeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeTransformWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeTransformWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeVector2D",(Native)&USCLibrary::execSCL_Callable_SetSafeVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeVector2DWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeVector2DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeVector3D",(Native)&USCLibrary::execSCL_Callable_SetSafeVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeVector3DWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeVector3DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeVector4D",(Native)&USCLibrary::execSCL_Callable_SetSafeVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Callable_SetSafeVector4DWithKey",(Native)&USCLibrary::execSCL_Callable_SetSafeVector4DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeBool",(Native)&USCLibrary::execSCL_Pure_GetSafeBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeBoolWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeBoolWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeByte",(Native)&USCLibrary::execSCL_Pure_GetSafeByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeByteWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeByteWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeColor",(Native)&USCLibrary::execSCL_Pure_GetSafeColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeColorWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeColorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeFloat",(Native)&USCLibrary::execSCL_Pure_GetSafeFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeFloatWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeFloatWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeInt",(Native)&USCLibrary::execSCL_Pure_GetSafeInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeIntWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeIntWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeName",(Native)&USCLibrary::execSCL_Pure_GetSafeName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeNameWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeNameWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeRotator",(Native)&USCLibrary::execSCL_Pure_GetSafeRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeRotatorWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeRotatorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeString",(Native)&USCLibrary::execSCL_Pure_GetSafeString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeStringWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeStringWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeText",(Native)&USCLibrary::execSCL_Pure_GetSafeText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeTextWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeTextWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeTransform",(Native)&USCLibrary::execSCL_Pure_GetSafeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeTransformWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeTransformWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeVector2D",(Native)&USCLibrary::execSCL_Pure_GetSafeVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeVector2DWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeVector2DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeVector3D",(Native)&USCLibrary::execSCL_Pure_GetSafeVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeVector3DWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeVector3DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeVector4D",(Native)&USCLibrary::execSCL_Pure_GetSafeVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_GetSafeVector4DWithKey",(Native)&USCLibrary::execSCL_Pure_GetSafeVector4DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeBool",(Native)&USCLibrary::execSCL_Pure_SetSafeBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeBoolWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeBoolWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeByte",(Native)&USCLibrary::execSCL_Pure_SetSafeByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeByteWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeByteWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeColor",(Native)&USCLibrary::execSCL_Pure_SetSafeColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeColorWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeColorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeFloat",(Native)&USCLibrary::execSCL_Pure_SetSafeFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeFloatWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeFloatWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeInt",(Native)&USCLibrary::execSCL_Pure_SetSafeInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeIntWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeIntWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeName",(Native)&USCLibrary::execSCL_Pure_SetSafeName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeNameWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeNameWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeRotator",(Native)&USCLibrary::execSCL_Pure_SetSafeRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeRotatorWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeRotatorWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeString",(Native)&USCLibrary::execSCL_Pure_SetSafeString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeStringWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeStringWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeText",(Native)&USCLibrary::execSCL_Pure_SetSafeText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeTextWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeTextWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeTransform",(Native)&USCLibrary::execSCL_Pure_SetSafeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeTransformWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeTransformWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeVector2D",(Native)&USCLibrary::execSCL_Pure_SetSafeVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeVector2DWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeVector2DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeVector3D",(Native)&USCLibrary::execSCL_Pure_SetSafeVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeVector3DWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeVector3DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeVector4D",(Native)&USCLibrary::execSCL_Pure_SetSafeVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCL_Pure_SetSafeVector4DWithKey",(Native)&USCLibrary::execSCL_Pure_SetSafeVector4DWithKey);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetBoolAndFSB",(Native)&USCLibrary::execSCO_Pure_GetBoolAndFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetBoolEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetBoolEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetBoolNotEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetBoolNotEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetBoolOrFSB",(Native)&USCLibrary::execSCO_Pure_GetBoolOrFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteAndFSB",(Native)&USCLibrary::execSCO_Pure_GetByteAndFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteDivideFSB",(Native)&USCLibrary::execSCO_Pure_GetByteDivideFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetByteEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteGreaterEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetByteGreaterEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteGreaterFSB",(Native)&USCLibrary::execSCO_Pure_GetByteGreaterFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteMinusEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetByteMinusEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteMinusFSB",(Native)&USCLibrary::execSCO_Pure_GetByteMinusFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteModFSB",(Native)&USCLibrary::execSCO_Pure_GetByteModFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteNotEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetByteNotEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteOrFSB",(Native)&USCLibrary::execSCO_Pure_GetByteOrFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetBytePlusEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetBytePlusEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetBytePlusFSB",(Native)&USCLibrary::execSCO_Pure_GetBytePlusFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteShiftLFSB",(Native)&USCLibrary::execSCO_Pure_GetByteShiftLFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteShiftRFSB",(Native)&USCLibrary::execSCO_Pure_GetByteShiftRFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteSmallerEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetByteSmallerEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteSmallerFSB",(Native)&USCLibrary::execSCO_Pure_GetByteSmallerFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteTimesFSB",(Native)&USCLibrary::execSCO_Pure_GetByteTimesFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetByteXorFSB",(Native)&USCLibrary::execSCO_Pure_GetByteXorFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetColorEqualFSC",(Native)&USCLibrary::execSCO_Pure_GetColorEqualFSC);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetColorNotEqualFSC",(Native)&USCLibrary::execSCO_Pure_GetColorNotEqualFSC);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatDivideFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatDivideFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatGreaterEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatGreaterEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatGreaterFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatGreaterFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatMinusEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatMinusEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatMinusFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatMinusFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatModFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatModFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatNotEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatNotEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatPlusEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatPlusEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatPlusFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatPlusFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatSmallerEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatSmallerEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatSmallerFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatSmallerFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetFloatTimesFSF",(Native)&USCLibrary::execSCO_Pure_GetFloatTimesFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntAndFSI",(Native)&USCLibrary::execSCO_Pure_GetIntAndFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntDivideFSI",(Native)&USCLibrary::execSCO_Pure_GetIntDivideFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetIntEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntGreaterEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetIntGreaterEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntGreaterFSI",(Native)&USCLibrary::execSCO_Pure_GetIntGreaterFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntMinusEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetIntMinusEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntMinusFSI",(Native)&USCLibrary::execSCO_Pure_GetIntMinusFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntModFSI",(Native)&USCLibrary::execSCO_Pure_GetIntModFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntNotEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetIntNotEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntOrFSI",(Native)&USCLibrary::execSCO_Pure_GetIntOrFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntPlusEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetIntPlusEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntPlusFSI",(Native)&USCLibrary::execSCO_Pure_GetIntPlusFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntShiftLFSI",(Native)&USCLibrary::execSCO_Pure_GetIntShiftLFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntShiftRFSI",(Native)&USCLibrary::execSCO_Pure_GetIntShiftRFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntSmallerEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetIntSmallerEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntSmallerFSI",(Native)&USCLibrary::execSCO_Pure_GetIntSmallerFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntTimesFSI",(Native)&USCLibrary::execSCO_Pure_GetIntTimesFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetIntXorFSI",(Native)&USCLibrary::execSCO_Pure_GetIntXorFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetNameEqualFSN",(Native)&USCLibrary::execSCO_Pure_GetNameEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetNameGreaterFSN",(Native)&USCLibrary::execSCO_Pure_GetNameGreaterFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetNameNotEqualFSN",(Native)&USCLibrary::execSCO_Pure_GetNameNotEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetNamePlusEqualFSN",(Native)&USCLibrary::execSCO_Pure_GetNamePlusEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetNamePlusFSN",(Native)&USCLibrary::execSCO_Pure_GetNamePlusFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetNameSmallerFSN",(Native)&USCLibrary::execSCO_Pure_GetNameSmallerFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorDivideFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorDivideFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorGreaterEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorGreaterEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorGreaterFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorGreaterFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorMinusEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorMinusEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorMinusFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorMinusFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorModFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorModFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorNotEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorNotEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorPlusEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorPlusEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorPlusFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorPlusFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorSmallerEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorSmallerEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorSmallerFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorSmallerFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetRotatorTimesFSR",(Native)&USCLibrary::execSCO_Pure_GetRotatorTimesFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolAndBool",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolAndBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolAndFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolAndFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolEqualBool",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolEqualBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolNotEqualBool",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolNotEqualBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolNotEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolNotEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolOrBool",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolOrBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBoolOrFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeBoolOrFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteAndByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteAndByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteAndFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteAndFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteDecreaseFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteDecreaseFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteDivideByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteDivideByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteDivideFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteDivideFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteEqualByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteGreaterByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteGreaterByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteGreaterEqualByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteGreaterEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteGreaterEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteGreaterEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteGreaterFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteGreaterFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteIncreaseFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteIncreaseFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteMinusByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteMinusByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteMinusEqualByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteMinusEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteMinusEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteMinusEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteMinusFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteMinusFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteModByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteModByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteModFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteModFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteNotByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteNotByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteNotEqualByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteNotEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteNotEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteNotEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteNotFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteNotFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteOrByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteOrByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteOrFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteOrFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBytePlusByte",(Native)&USCLibrary::execSCO_Pure_GetSafeBytePlusByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBytePlusEqualByte",(Native)&USCLibrary::execSCO_Pure_GetSafeBytePlusEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBytePlusEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeBytePlusEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeBytePlusFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeBytePlusFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteShiftLByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteShiftLByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteShiftLFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteShiftLFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteShiftRByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteShiftRByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteShiftRFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteShiftRFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteSmallerByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteSmallerByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteSmallerEqualByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteSmallerEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteSmallerEqualFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteSmallerEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteSmallerFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteSmallerFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteTimesByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteTimesByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteTimesFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteTimesFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteXorByte",(Native)&USCLibrary::execSCO_Pure_GetSafeByteXorByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeByteXorFSB",(Native)&USCLibrary::execSCO_Pure_GetSafeByteXorFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeColorEqualColor",(Native)&USCLibrary::execSCO_Pure_GetSafeColorEqualColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeColorEqualFSC",(Native)&USCLibrary::execSCO_Pure_GetSafeColorEqualFSC);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeColorNotEqualColor",(Native)&USCLibrary::execSCO_Pure_GetSafeColorNotEqualColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeColorNotEqualFSC",(Native)&USCLibrary::execSCO_Pure_GetSafeColorNotEqualFSC);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatDecreaseFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatDecreaseFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatDivideFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatDivideFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatDivideFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatDivideFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatEqualFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatGreaterEqualFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatGreaterEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatGreaterEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatGreaterEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatGreaterFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatGreaterFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatGreaterFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatGreaterFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatIncreaseFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatIncreaseFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatMinusEqualFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatMinusEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatMinusEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatMinusEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatMinusFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatMinusFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatMinusFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatMinusFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatModFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatModFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatModFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatModFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatNotEqualFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatNotEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatNotEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatNotEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatPlusEqualFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatPlusEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatPlusEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatPlusEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatPlusFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatPlusFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatPlusFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatPlusFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatSmallerEqualFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatSmallerEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatSmallerEqualFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatSmallerEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatSmallerFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatSmallerFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatSmallerFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatSmallerFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatTimesFloat",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatTimesFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeFloatTimesFSF",(Native)&USCLibrary::execSCO_Pure_GetSafeFloatTimesFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntAndFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntAndFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntAndInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntAndInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntDecreaseFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntDecreaseFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntDivideFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntDivideFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntDivideInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntDivideInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntEqualInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntGreaterEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntGreaterEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntGreaterEqualInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntGreaterEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntGreaterFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntGreaterFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntGreaterInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntGreaterInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntIncreaseFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntIncreaseFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntMinusEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntMinusEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntMinusEqualInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntMinusEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntMinusFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntMinusFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntMinusInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntMinusInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntModFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntModFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntModInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntModInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntNotEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntNotEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntNotEqualInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntNotEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntNotFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntNotFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntNotInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntNotInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntOrFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntOrFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntOrInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntOrInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntPlusEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntPlusEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntPlusEqualInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntPlusEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntPlusFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntPlusFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntPlusInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntPlusInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntShiftLFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntShiftLFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntShiftLInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntShiftLInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntShiftRFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntShiftRFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntShiftRInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntShiftRInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntSmallerEqualFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntSmallerEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntSmallerEqualInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntSmallerEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntSmallerFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntSmallerFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntSmallerInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntSmallerInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntTimesFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntTimesFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntTimesInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntTimesInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntXorFSI",(Native)&USCLibrary::execSCO_Pure_GetSafeIntXorFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeIntXorInt",(Native)&USCLibrary::execSCO_Pure_GetSafeIntXorInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameEqualFSN",(Native)&USCLibrary::execSCO_Pure_GetSafeNameEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameEqualName",(Native)&USCLibrary::execSCO_Pure_GetSafeNameEqualName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameGreaterFSN",(Native)&USCLibrary::execSCO_Pure_GetSafeNameGreaterFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameGreaterName",(Native)&USCLibrary::execSCO_Pure_GetSafeNameGreaterName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameNotEqualFSN",(Native)&USCLibrary::execSCO_Pure_GetSafeNameNotEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameNotEqualName",(Native)&USCLibrary::execSCO_Pure_GetSafeNameNotEqualName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNamePlusEqualFSN",(Native)&USCLibrary::execSCO_Pure_GetSafeNamePlusEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNamePlusEqualName",(Native)&USCLibrary::execSCO_Pure_GetSafeNamePlusEqualName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNamePlusFSN",(Native)&USCLibrary::execSCO_Pure_GetSafeNamePlusFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNamePlusName",(Native)&USCLibrary::execSCO_Pure_GetSafeNamePlusName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameSmallerFSN",(Native)&USCLibrary::execSCO_Pure_GetSafeNameSmallerFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeNameSmallerName",(Native)&USCLibrary::execSCO_Pure_GetSafeNameSmallerName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorDecreaseFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorDecreaseFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorDivideFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorDivideFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorDivideRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorDivideRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorEqualRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorGreaterEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorGreaterEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorGreaterEqualRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorGreaterEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorGreaterFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorGreaterFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorGreaterRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorGreaterRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorIncreaseFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorIncreaseFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorMinusEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorMinusEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorMinusEqualRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorMinusEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorMinusFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorMinusFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorMinusRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorMinusRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorModFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorModFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorModRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorModRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorNotEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorNotEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorNotEqualRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorNotEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorPlusEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorPlusEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorPlusEqualRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorPlusEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorPlusFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorPlusFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorPlusRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorPlusRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorSmallerEqualFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorSmallerEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorSmallerEqualRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorSmallerEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorSmallerFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorSmallerFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorSmallerRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorSmallerRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorTimesFSR",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorTimesFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeRotatorTimesRotator",(Native)&USCLibrary::execSCO_Pure_GetSafeRotatorTimesRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringEqualFSS",(Native)&USCLibrary::execSCO_Pure_GetSafeStringEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringEqualString",(Native)&USCLibrary::execSCO_Pure_GetSafeStringEqualString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringGreaterFSS",(Native)&USCLibrary::execSCO_Pure_GetSafeStringGreaterFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringGreaterString",(Native)&USCLibrary::execSCO_Pure_GetSafeStringGreaterString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringNotEqualFSS",(Native)&USCLibrary::execSCO_Pure_GetSafeStringNotEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringNotEqualString",(Native)&USCLibrary::execSCO_Pure_GetSafeStringNotEqualString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringPlusEqualFSS",(Native)&USCLibrary::execSCO_Pure_GetSafeStringPlusEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringPlusEqualString",(Native)&USCLibrary::execSCO_Pure_GetSafeStringPlusEqualString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringPlusFSS",(Native)&USCLibrary::execSCO_Pure_GetSafeStringPlusFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringPlusString",(Native)&USCLibrary::execSCO_Pure_GetSafeStringPlusString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringSmallerFSS",(Native)&USCLibrary::execSCO_Pure_GetSafeStringSmallerFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeStringSmallerString",(Native)&USCLibrary::execSCO_Pure_GetSafeStringSmallerString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextEqualFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTextEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextEqualText",(Native)&USCLibrary::execSCO_Pure_GetSafeTextEqualText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextGreaterFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTextGreaterFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextGreaterText",(Native)&USCLibrary::execSCO_Pure_GetSafeTextGreaterText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextNotEqualFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTextNotEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextNotEqualText",(Native)&USCLibrary::execSCO_Pure_GetSafeTextNotEqualText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextPlusEqualFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTextPlusEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextPlusEqualText",(Native)&USCLibrary::execSCO_Pure_GetSafeTextPlusEqualText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextPlusFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTextPlusFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextPlusText",(Native)&USCLibrary::execSCO_Pure_GetSafeTextPlusText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextSmallerFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTextSmallerFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTextSmallerText",(Native)&USCLibrary::execSCO_Pure_GetSafeTextSmallerText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTransformEqualFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTransformEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTransformEqualTransform",(Native)&USCLibrary::execSCO_Pure_GetSafeTransformEqualTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTransformNotEqualFST",(Native)&USCLibrary::execSCO_Pure_GetSafeTransformNotEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeTransformNotEqualTransform",(Native)&USCLibrary::execSCO_Pure_GetSafeTransformNotEqualTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DDecreaseFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DDecreaseFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DDivideFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DDivideFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DDivideVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DDivideVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DEqualVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DGreaterEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DGreaterEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DGreaterEqualVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DGreaterEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DGreaterFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DGreaterFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DGreaterVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DGreaterVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DIncreaseFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DIncreaseFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DMinusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DMinusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DMinusEqualVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DMinusEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DMinusFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DMinusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DMinusVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DMinusVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DModFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DModFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DModVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DModVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DNotEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DNotEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DNotEqualVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DNotEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DPlusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DPlusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DPlusEqualVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DPlusEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DPlusFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DPlusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DPlusVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DPlusVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DSmallerEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DSmallerEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DSmallerEqualVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DSmallerEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DSmallerFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DSmallerFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DSmallerVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DSmallerVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DTimesFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DTimesFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector2DTimesVector2D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector2DTimesVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DDecreaseFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DDecreaseFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DDivideFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DDivideFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DDivideVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DDivideVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DEqualVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DGreaterEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DGreaterEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DGreaterEqualVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DGreaterEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DGreaterFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DGreaterFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DGreaterVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DGreaterVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DIncreaseFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DIncreaseFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DMinusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DMinusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DMinusEqualVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DMinusEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DMinusFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DMinusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DMinusVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DMinusVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DModFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DModFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DModVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DModVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DNotEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DNotEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DNotEqualVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DNotEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DPlusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DPlusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DPlusEqualVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DPlusEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DPlusFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DPlusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DPlusVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DPlusVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DSmallerEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DSmallerEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DSmallerEqualVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DSmallerEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DSmallerFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DSmallerFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DSmallerVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DSmallerVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DTimesFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DTimesFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector3DTimesVector3D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector3DTimesVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DDecreaseFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DDecreaseFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DDivideFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DDivideFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DDivideVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DDivideVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DEqualVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DGreaterEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DGreaterEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DGreaterEqualVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DGreaterEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DGreaterFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DGreaterFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DGreaterVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DGreaterVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DIncreaseFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DIncreaseFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DMinusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DMinusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DMinusEqualVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DMinusEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DMinusFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DMinusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DMinusVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DMinusVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DModFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DModFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DModVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DModVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DNotEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DNotEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DNotEqualVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DNotEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DPlusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DPlusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DPlusEqualVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DPlusEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DPlusFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DPlusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DPlusVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DPlusVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DSmallerEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DSmallerEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DSmallerEqualVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DSmallerEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DSmallerFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DSmallerFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DSmallerVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DSmallerVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DTimesFSV",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DTimesFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetSafeVector4DTimesVector4D",(Native)&USCLibrary::execSCO_Pure_GetSafeVector4DTimesVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetStringEqualFSS",(Native)&USCLibrary::execSCO_Pure_GetStringEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetStringGreaterFSS",(Native)&USCLibrary::execSCO_Pure_GetStringGreaterFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetStringNotEqualFSS",(Native)&USCLibrary::execSCO_Pure_GetStringNotEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetStringPlusEqualFSS",(Native)&USCLibrary::execSCO_Pure_GetStringPlusEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetStringPlusFSS",(Native)&USCLibrary::execSCO_Pure_GetStringPlusFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetStringSmallerFSS",(Native)&USCLibrary::execSCO_Pure_GetStringSmallerFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTextEqualFST",(Native)&USCLibrary::execSCO_Pure_GetTextEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTextGreaterFST",(Native)&USCLibrary::execSCO_Pure_GetTextGreaterFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTextNotEqualFST",(Native)&USCLibrary::execSCO_Pure_GetTextNotEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTextPlusEqualFST",(Native)&USCLibrary::execSCO_Pure_GetTextPlusEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTextPlusFST",(Native)&USCLibrary::execSCO_Pure_GetTextPlusFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTextSmallerFST",(Native)&USCLibrary::execSCO_Pure_GetTextSmallerFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTransformEqualFST",(Native)&USCLibrary::execSCO_Pure_GetTransformEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetTransformNotEqualFST",(Native)&USCLibrary::execSCO_Pure_GetTransformNotEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DDivideFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DDivideFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DGreaterEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DGreaterEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DGreaterFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DGreaterFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DMinusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DMinusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DMinusFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DMinusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DModFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DModFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DNotEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DNotEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DPlusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DPlusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DPlusFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DPlusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DSmallerEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DSmallerEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DSmallerFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DSmallerFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector2DTimesFSV",(Native)&USCLibrary::execSCO_Pure_GetVector2DTimesFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DDivideFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DDivideFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DGreaterEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DGreaterEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DGreaterFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DGreaterFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DMinusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DMinusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DMinusFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DMinusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DModFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DModFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DNotEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DNotEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DPlusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DPlusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DPlusFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DPlusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DSmallerEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DSmallerEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DSmallerFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DSmallerFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector3DTimesFSV",(Native)&USCLibrary::execSCO_Pure_GetVector3DTimesFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DDivideFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DDivideFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DGreaterEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DGreaterEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DGreaterFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DGreaterFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DMinusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DMinusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DMinusFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DMinusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DModFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DModFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DNotEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DNotEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DPlusEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DPlusEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DPlusFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DPlusFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DSmallerEqualFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DSmallerEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DSmallerFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DSmallerFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_GetVector4DTimesFSV",(Native)&USCLibrary::execSCO_Pure_GetVector4DTimesFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetBoolEqualFSB",(Native)&USCLibrary::execSCO_Pure_SetBoolEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetByteEqualFSB",(Native)&USCLibrary::execSCO_Pure_SetByteEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetColorEqualFSC",(Native)&USCLibrary::execSCO_Pure_SetColorEqualFSC);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetFloatEqualFSF",(Native)&USCLibrary::execSCO_Pure_SetFloatEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetIntEqualFSI",(Native)&USCLibrary::execSCO_Pure_SetIntEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetNameEqualFSN",(Native)&USCLibrary::execSCO_Pure_SetNameEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetRotatorEqualFSR",(Native)&USCLibrary::execSCO_Pure_SetRotatorEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeBoolEqualBool",(Native)&USCLibrary::execSCO_Pure_SetSafeBoolEqualBool);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeBoolEqualFSB",(Native)&USCLibrary::execSCO_Pure_SetSafeBoolEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeByteEqualByte",(Native)&USCLibrary::execSCO_Pure_SetSafeByteEqualByte);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeByteEqualFSB",(Native)&USCLibrary::execSCO_Pure_SetSafeByteEqualFSB);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeColorEqualColor",(Native)&USCLibrary::execSCO_Pure_SetSafeColorEqualColor);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeColorEqualFSC",(Native)&USCLibrary::execSCO_Pure_SetSafeColorEqualFSC);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeFloatEqualFloat",(Native)&USCLibrary::execSCO_Pure_SetSafeFloatEqualFloat);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeFloatEqualFSF",(Native)&USCLibrary::execSCO_Pure_SetSafeFloatEqualFSF);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeIntEqualFSI",(Native)&USCLibrary::execSCO_Pure_SetSafeIntEqualFSI);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeIntEqualInt",(Native)&USCLibrary::execSCO_Pure_SetSafeIntEqualInt);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeNameEqualFSN",(Native)&USCLibrary::execSCO_Pure_SetSafeNameEqualFSN);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeNameEqualName",(Native)&USCLibrary::execSCO_Pure_SetSafeNameEqualName);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeRotatorEqualFSR",(Native)&USCLibrary::execSCO_Pure_SetSafeRotatorEqualFSR);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeRotatorEqualRotator",(Native)&USCLibrary::execSCO_Pure_SetSafeRotatorEqualRotator);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeStringEqualFSS",(Native)&USCLibrary::execSCO_Pure_SetSafeStringEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeStringEqualString",(Native)&USCLibrary::execSCO_Pure_SetSafeStringEqualString);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeTextEqualFST",(Native)&USCLibrary::execSCO_Pure_SetSafeTextEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeTextEqualText",(Native)&USCLibrary::execSCO_Pure_SetSafeTextEqualText);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeTransformEqualFST",(Native)&USCLibrary::execSCO_Pure_SetSafeTransformEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeTransformEqualTransform",(Native)&USCLibrary::execSCO_Pure_SetSafeTransformEqualTransform);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeVector2DEqualFSV",(Native)&USCLibrary::execSCO_Pure_SetSafeVector2DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeVector2DEqualVector2D",(Native)&USCLibrary::execSCO_Pure_SetSafeVector2DEqualVector2D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeVector3DEqualFSV",(Native)&USCLibrary::execSCO_Pure_SetSafeVector3DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeVector3DEqualVector3D",(Native)&USCLibrary::execSCO_Pure_SetSafeVector3DEqualVector3D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeVector4DEqualFSV",(Native)&USCLibrary::execSCO_Pure_SetSafeVector4DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetSafeVector4DEqualVector4D",(Native)&USCLibrary::execSCO_Pure_SetSafeVector4DEqualVector4D);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetStringEqualFSS",(Native)&USCLibrary::execSCO_Pure_SetStringEqualFSS);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetTextEqualFST",(Native)&USCLibrary::execSCO_Pure_SetTextEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetTransformEqualFST",(Native)&USCLibrary::execSCO_Pure_SetTransformEqualFST);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetVector2DEqualFSV",(Native)&USCLibrary::execSCO_Pure_SetVector2DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetVector3DEqualFSV",(Native)&USCLibrary::execSCO_Pure_SetVector3DEqualFSV);
		FNativeFunctionRegistrar::RegisterFunction(USCLibrary::StaticClass(), "SCO_Pure_SetVector4DEqualFSV",(Native)&USCLibrary::execSCO_Pure_SetVector4DEqualFSV);
	}
	IMPLEMENT_CLASS(USCLibrary, 1868018036);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector4();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeTransform();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeRotator();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeColor();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeVector4D();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeVector3D();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeVector2D();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeText();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeString();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeName();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeFloat();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeInt();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeByte();
	SCUE4_API class UScriptStruct* Z_Construct_UScriptStruct_FSafeBool();
	SCUE4_API class UClass* Z_Construct_UClass_USCUE4Settings_NoRegister();
	SCUE4_API class UClass* Z_Construct_UClass_USCUE4Settings();
	SCUE4_API class UFunction* Z_Construct_UFunction_USafeGameInstance_HideGameGuardConsole();
	SCUE4_API class UClass* Z_Construct_UClass_USafeGameInstance_NoRegister();
	SCUE4_API class UClass* Z_Construct_UClass_USafeGameInstance();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBoolWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByteWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloatWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeIntWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeNameWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotatorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeStringWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTextWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransformWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBoolWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByteWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloatWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeIntWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeNameWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotatorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeStringWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTextWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransformWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBoolWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByteWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloatWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeIntWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeNameWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotatorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeStringWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTextWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransformWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBoolWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByteWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloatWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeIntWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeNameWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotatorWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeStringWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTextWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransformWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4DWithKey();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolAndFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolNotEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolOrFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteAndFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteDivideFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteModFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteNotEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteOrFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftLFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftRFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteTimesFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteXorFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorEqualFSC();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorNotEqualFSC();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatDivideFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatModFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatNotEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatTimesFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntAndFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntDivideFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntModFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntNotEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntOrFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntPlusEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntPlusFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntShiftLFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntShiftRFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntSmallerEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntSmallerFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntTimesFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntXorFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameGreaterFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameNotEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNamePlusEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNamePlusFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameSmallerFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorDivideFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorGreaterEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorGreaterFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorMinusEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorMinusFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorModFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorNotEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorPlusEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorPlusFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorSmallerEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorSmallerFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorTimesFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolAndBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolAndFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolEqualBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolNotEqualBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolNotEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolOrBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolOrFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteAndByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteAndFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDecreaseFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDivideByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDivideFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteIncreaseFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteModByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteModFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteOrByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteOrFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftLByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftLFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftRByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftRFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteTimesByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteTimesFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteXorByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteXorFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorEqualColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorEqualFSC();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorNotEqualColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorNotEqualFSC();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDecreaseFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDivideFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDivideFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatIncreaseFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatModFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatModFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatNotEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatNotEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatTimesFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatTimesFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntAndFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntAndInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDecreaseFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDivideFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDivideInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntIncreaseFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntModFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntModInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntOrFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntOrInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftLFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftLInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftRFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftRInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntTimesFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntTimesInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntXorFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntXorInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameEqualName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameGreaterFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameGreaterName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameNotEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameNotEqualName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusEqualName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameSmallerFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameSmallerName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDecreaseFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDivideFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDivideRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorIncreaseFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorModFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorModRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorNotEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorNotEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorTimesFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorTimesRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringEqualString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringGreaterFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringGreaterString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringNotEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringNotEqualString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusEqualString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringSmallerFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringSmallerString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextEqualText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextGreaterFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextGreaterText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextNotEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextNotEqualText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusEqualText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextSmallerFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextSmallerText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformEqualTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformNotEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformNotEqualTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDecreaseFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDivideFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDivideVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DIncreaseFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DModFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DModVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DNotEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DNotEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DTimesFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DTimesVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDecreaseFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDivideFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDivideVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DIncreaseFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DModFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DModVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DNotEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DNotEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DTimesFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DTimesVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDecreaseFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDivideFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDivideVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DIncreaseFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DModFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DModVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DNotEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DNotEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DTimesFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DTimesVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringGreaterFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringNotEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringPlusEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringPlusFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringSmallerFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextGreaterFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextNotEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextPlusEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextPlusFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextSmallerFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTransformEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTransformNotEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DDivideFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DGreaterEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DGreaterFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DMinusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DMinusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DModFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DNotEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DPlusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DPlusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DSmallerEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DSmallerFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DTimesFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DDivideFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DGreaterEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DGreaterFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DMinusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DMinusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DModFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DNotEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DPlusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DPlusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DSmallerEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DSmallerFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DTimesFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DDivideFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DGreaterEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DGreaterFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DMinusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DMinusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DModFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DNotEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DPlusEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DPlusFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DSmallerEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DSmallerFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DTimesFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetBoolEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetByteEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetColorEqualFSC();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetFloatEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetIntEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetNameEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetRotatorEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeBoolEqualBool();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeBoolEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeByteEqualByte();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeByteEqualFSB();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeColorEqualColor();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeColorEqualFSC();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeFloatEqualFloat();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeFloatEqualFSF();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeIntEqualFSI();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeIntEqualInt();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeNameEqualFSN();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeNameEqualName();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeRotatorEqualFSR();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeRotatorEqualRotator();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeStringEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeStringEqualString();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTextEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTextEqualText();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTransformEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTransformEqualTransform();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector2DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector2DEqualVector2D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector3DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector3DEqualVector3D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector4DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector4DEqualVector4D();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetStringEqualFSS();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetTextEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetTransformEqualFST();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector2DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector3DEqualFSV();
	SCUE4_API class UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector4DEqualFSV();
	SCUE4_API class UClass* Z_Construct_UClass_USCLibrary_NoRegister();
	SCUE4_API class UClass* Z_Construct_UClass_USCLibrary();
	SCUE4_API class UPackage* Z_Construct_UPackage__Script_SCUE4();
	UScriptStruct* Z_Construct_UScriptStruct_FSafeTransform()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeTransform_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeTransform"), sizeof(FSafeTransform), Get_Z_Construct_UScriptStruct_FSafeTransform_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeTransform>, EStructFlags(0x00000201));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, FSafeTransform), 0x0040000001020001, Z_Construct_UScriptStruct_FSafeRotator());
			UProperty* NewProp_Position = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Position"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Position, FSafeTransform), 0x0040000001020001, Z_Construct_UScriptStruct_FSafeVector3D());
			UProperty* NewProp_Scale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Scale"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Scale, FSafeTransform), 0x0040000001020001, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Transform Property;\nUse this data format to store sensible Transform values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Rotation, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Position, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Position, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Scale, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Scale, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeTransform_CRC() { return 2090726405U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeRotator()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeRotator_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeRotator"), sizeof(FSafeRotator), Get_Z_Construct_UScriptStruct_FSafeRotator_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeRotator"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeRotator>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeRotator), 0x0040000001000000);
			UProperty* NewProp_ShiftZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftZ"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftZ, FSafeRotator), 0x0040000001020001);
			UProperty* NewProp_ShiftY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftY, FSafeRotator), 0x0040000001020001);
			UProperty* NewProp_ShiftX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftX, FSafeRotator), 0x0040000001020001);
			UProperty* NewProp_TrueZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueZ"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueZ, FSafeRotator), 0x0040000001020001);
			UProperty* NewProp_TrueY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueY, FSafeRotator), 0x0040000001020001);
			UProperty* NewProp_TrueX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueX, FSafeRotator), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeRotator), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Rotator Property;\nUse this data format to store sensible Rotator values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftZ, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftZ, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueZ, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueZ, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeRotator_CRC() { return 4176077960U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeColor()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeColor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeColor"), sizeof(FSafeColor), Get_Z_Construct_UScriptStruct_FSafeColor_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeColor"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeColor>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeColor), 0x0040000001000000);
			UProperty* NewProp_ShiftA = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftA"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftA, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_ShiftB = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftB"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftB, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_ShiftG = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftG"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftG, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_ShiftR = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftR"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftR, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_TrueA = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueA"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueA, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_TrueB = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueB"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueB, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_TrueG = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueG"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueG, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_TrueR = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueR"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueR, FSafeColor), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeColor), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Color Property;\nUse this data format to store sensible Linear Color values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftA, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftA, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftB, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftB, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftG, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftG, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftR, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftR, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueA, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueA, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueB, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueB, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueG, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueG, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueR, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueR, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeColor_CRC() { return 4185437834U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeVector4D()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeVector4D_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeVector4D"), sizeof(FSafeVector4D), Get_Z_Construct_UScriptStruct_FSafeVector4D_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeVector4D"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeVector4D>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeVector4D), 0x0040000001000000);
			UProperty* NewProp_ShiftW = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftW"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftW, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_ShiftZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftZ"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftZ, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_ShiftY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftY, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_ShiftX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftX, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_TrueW = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueW"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueW, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_TrueZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueZ"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueZ, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_TrueY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueY, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_TrueX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueX, FSafeVector4D), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeVector4D), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Vector4D Property;\nUse this data format to store sensible Vector4D values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftW, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftW, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftZ, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftZ, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueW, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueW, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueZ, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueZ, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeVector4D_CRC() { return 1747573013U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeVector3D()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeVector3D_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeVector3D"), sizeof(FSafeVector3D), Get_Z_Construct_UScriptStruct_FSafeVector3D_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeVector3D"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeVector3D>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeVector3D), 0x0040000001000000);
			UProperty* NewProp_ShiftZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftZ"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftZ, FSafeVector3D), 0x0040000001020001);
			UProperty* NewProp_ShiftY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftY, FSafeVector3D), 0x0040000001020001);
			UProperty* NewProp_ShiftX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftX, FSafeVector3D), 0x0040000001020001);
			UProperty* NewProp_TrueZ = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueZ"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueZ, FSafeVector3D), 0x0040000001020001);
			UProperty* NewProp_TrueY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueY, FSafeVector3D), 0x0040000001020001);
			UProperty* NewProp_TrueX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueX, FSafeVector3D), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeVector3D), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Vector3D Property;\nUse this data format to store sensible Vector3D values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftZ, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftZ, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueZ, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueZ, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeVector3D_CRC() { return 1895238516U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeVector2D()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeVector2D_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeVector2D"), sizeof(FSafeVector2D), Get_Z_Construct_UScriptStruct_FSafeVector2D_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeVector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeVector2D>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeVector2D), 0x0040000001000000);
			UProperty* NewProp_ShiftY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftY, FSafeVector2D), 0x0040000001020001);
			UProperty* NewProp_ShiftX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShiftX, FSafeVector2D), 0x0040000001020001);
			UProperty* NewProp_TrueY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueY"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueY, FSafeVector2D), 0x0040000001020001);
			UProperty* NewProp_TrueX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueX"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueX, FSafeVector2D), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeVector2D), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Vector2D Property;\nUse this data format to store sensible Vector2D values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_ShiftX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueY, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueY, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueX, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueX, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeVector2D_CRC() { return 3022588531U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeText()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeText_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeText"), sizeof(FSafeText), Get_Z_Construct_UScriptStruct_FSafeText_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeText"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeText>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeText), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeText), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeText), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeText), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Text Property;\nUse this data format to store sensible Text values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeText_CRC() { return 1290310100U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeString()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeString_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeString"), sizeof(FSafeString), Get_Z_Construct_UScriptStruct_FSafeString_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeString"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeString>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeString), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeString), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeString), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeString), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe String Property;\nUse this data format to store sensible String values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeString_CRC() { return 1032827512U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeName()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeName_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeName"), sizeof(FSafeName), Get_Z_Construct_UScriptStruct_FSafeName_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeName"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeName>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeName), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeName), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeName), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeName), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Name Property;\nUse this data format to store sensible Name values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeName_CRC() { return 2933813886U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeFloat()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeFloat_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeFloat"), sizeof(FSafeFloat), Get_Z_Construct_UScriptStruct_FSafeFloat_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeFloat>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeFloat), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeFloat), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeFloat), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeFloat), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Float Property;\nUse this data format to store sensible Float values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeFloat_CRC() { return 1595375415U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeInt()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeInt_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeInt"), sizeof(FSafeInt), Get_Z_Construct_UScriptStruct_FSafeInt_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeInt"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeInt>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeInt), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeInt), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeInt), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeInt), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Int32 Property;\nUse this data format to store sensible Int values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeInt_CRC() { return 901529142U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeByte()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeByte_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeByte"), sizeof(FSafeByte), Get_Z_Construct_UScriptStruct_FSafeByte_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeByte"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeByte>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeByte), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeByte), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeByte), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeByte), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Byte Property;\nUse this data format to store sensible Byte values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeByte_CRC() { return 1583932078U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSafeBool()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_SCUE4();
		extern uint32 Get_Z_Construct_UScriptStruct_FSafeBool_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SafeBool"), sizeof(FSafeBool), Get_Z_Construct_UScriptStruct_FSafeBool_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SafeBool"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSafeBool>, EStructFlags(0x00000201));
			UProperty* NewProp_Flag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flag"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flag, FSafeBool), 0x0040000001000000);
			UProperty* NewProp_Shift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Shift"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Shift, FSafeBool), 0x0040000001020001);
			UProperty* NewProp_TrueValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrueValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TrueValue, FSafeBool), 0x0040000001020001);
			UProperty* NewProp_Internal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Internal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Internal, FSafeBool), 0x0040000001020001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("{S}: Safe Boolean Property;\nUse this data format to store sensible Bool values you need protected against memory hackers."));
			MetaData->SetValue(NewProp_Flag, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Flag, TEXT("ToolTip"), TEXT("Flag will take the value from Address, clear it and shift them,\n      then copy value to previous Address and set it as default container."));
			MetaData->SetValue(NewProp_Shift, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Shift, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Shift, TEXT("ToolTip"), TEXT("Alternative Memory Address."));
			MetaData->SetValue(NewProp_TrueValue, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_TrueValue, TEXT("ToolTip"), TEXT("Default Memory Address."));
			MetaData->SetValue(NewProp_Internal, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(NewProp_Internal, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(NewProp_Internal, TEXT("ToolTip"), TEXT("Internal Key. Can be replaced each operation if wanted."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSafeBool_CRC() { return 1715996461U; }
	UClass* Z_Construct_UClass_USCUE4Settings_NoRegister()
	{
		return USCUE4Settings::StaticClass();
	}
	UClass* Z_Construct_UClass_USCUE4Settings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_SCUE4();
			OuterClass = USCUE4Settings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_IllegalKeywords = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IllegalKeywords"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(IllegalKeywords, USCUE4Settings), 0x0010000000004015);
				UProperty* NewProp_IllegalKeywords_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IllegalKeywords, TEXT("IllegalKeywords"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_KeyGeneratorPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("KeyGeneratorPath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(KeyGeneratorPath, USCUE4Settings), 0x0010000000004015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("Category"), TEXT("Synaptech"));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Synaptech"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SCUE4.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Default SCUE4 Settings"));
				MetaData->SetValue(NewProp_IllegalKeywords, TEXT("Category"), TEXT("General Settings"));
				MetaData->SetValue(NewProp_IllegalKeywords, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(NewProp_IllegalKeywords, TEXT("ToolTip"), TEXT("List of illegal process words that internal scanner shall look for."));
				MetaData->SetValue(NewProp_KeyGeneratorPath, TEXT("Category"), TEXT("General Settings"));
				MetaData->SetValue(NewProp_KeyGeneratorPath, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(NewProp_KeyGeneratorPath, TEXT("ToolTip"), TEXT("Path to the Editor's Key Generator standalone executable."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USCUE4Settings(Z_Construct_UClass_USCUE4Settings, &USCUE4Settings::StaticClass, TEXT("USCUE4Settings"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USCUE4Settings);
	UFunction* Z_Construct_UFunction_USafeGameInstance_HideGameGuardConsole()
	{
		struct SafeGameInstance_eventHideGameGuardConsole_Parms
		{
			bool Set;
		};
		UObject* Outer=Z_Construct_UClass_USafeGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HideGameGuardConsole"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SafeGameInstance_eventHideGameGuardConsole_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Set, SafeGameInstance_eventHideGameGuardConsole_Parms, bool);
			UProperty* NewProp_Set = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Set"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Set, SafeGameInstance_eventHideGameGuardConsole_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Set, SafeGameInstance_eventHideGameGuardConsole_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("{S}:: Hide Game-Guard Console"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Guard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets visibility of Game-Guard console window.\n      Console is only visible in Editor Mode, on packaged games it's always hidden."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USafeGameInstance_NoRegister()
	{
		return USafeGameInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_USafeGameInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameInstance();
			Z_Construct_UPackage__Script_SCUE4();
			OuterClass = USafeGameInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;

				OuterClass->LinkChild(Z_Construct_UFunction_USafeGameInstance_HideGameGuardConsole());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ScannerInterval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScannerInterval"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(CPP_PROPERTY_BASE(ScannerInterval, USafeGameInstance), 0x0010000000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AllowDebugging, USafeGameInstance, bool);
				UProperty* NewProp_AllowDebugging = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllowDebugging"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AllowDebugging, USafeGameInstance), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(AllowDebugging, USafeGameInstance), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(HideGameGuard, USafeGameInstance, bool);
				UProperty* NewProp_HideGameGuard = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HideGameGuard"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HideGameGuard, USafeGameInstance), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(HideGameGuard, USafeGameInstance), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USafeGameInstance_HideGameGuardConsole(), "HideGameGuardConsole"); // 24493619
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("Category"), TEXT("Security"));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Security"));
				MetaData->SetValue(OuterClass, TEXT("DisplayName"), TEXT("{S} Safe Game Instance"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Activation Socket Tick Thumbnail"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SCUE4.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(OuterClass, TEXT("ShortTooltip"), TEXT("{S} Safe Game Instance Class. Check documentation for more information."));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("{S}: Safe Game Instance; Secure-Client is a C++ Plugin designed to provide anti-cheat capability to your games.\nOther custom Game Instance classes, when used, should have this class as a parent for effective use."));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("Category"), TEXT("Security"));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("ClampMax"), TEXT("1000"));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("ClampMin"), TEXT("10"));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("ToolTip"), TEXT("Interval, in seconds, for Internal Process Scanner to be automatically invoked."));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("UIMax"), TEXT("1000"));
				MetaData->SetValue(NewProp_ScannerInterval, TEXT("UIMin"), TEXT("10"));
				MetaData->SetValue(NewProp_AllowDebugging, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_AllowDebugging, TEXT("Category"), TEXT("Security"));
				MetaData->SetValue(NewProp_AllowDebugging, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(NewProp_AllowDebugging, TEXT("ToolTip"), TEXT("To increase defenses against memory readers, uncheck this option when you're ready to\n      ship final standalone game build. If disabled, option won't allow Debuggers attach to the game process."));
				MetaData->SetValue(NewProp_HideGameGuard, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_HideGameGuard, TEXT("Category"), TEXT("Security"));
				MetaData->SetValue(NewProp_HideGameGuard, TEXT("ModuleRelativePath"), TEXT("Public/SCUE4.h"));
				MetaData->SetValue(NewProp_HideGameGuard, TEXT("ToolTip"), TEXT("Sets visibility of Game-Guard console window.\n      Console is only visible in Editor Mode, on packaged games it's always hidden."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USafeGameInstance(Z_Construct_UClass_USafeGameInstance, &USafeGameInstance::StaticClass, TEXT("USafeGameInstance"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USafeGameInstance);
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBool()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeBool_Parms
		{
			FSafeBool SB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeBool"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeBool_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeBool_Parms), sizeof(bool), true);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_GetSafeBool_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Bool Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBoolWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms
		{
			FSafeBool SB;
			FString Key;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeBoolWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_GetSafeBoolWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Bool Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByte()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeByte_Parms
		{
			FSafeByte SB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeByte"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeByte_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeByte_Parms), 0x0010000000000580);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_GetSafeByte_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Byte Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByteWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeByteWithKey_Parms
		{
			FSafeByte SB;
			FString Key;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeByteWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeByteWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeByteWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeByteWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_GetSafeByteWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets hidden value from 'Safe Byte Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColor()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeColor_Parms
		{
			FSafeColor SC;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeColor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeColor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeColor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Callable_GetSafeColor_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Color Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColorWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeColorWithKey_Parms
		{
			FSafeColor SC;
			FString Key;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeColorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeColorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeColorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeColorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Callable_GetSafeColorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Color Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloat()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeFloat_Parms
		{
			FSafeFloat SF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeFloat_Parms), 0x0010000000000580);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Callable_GetSafeFloat_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Float Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloatWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeFloatWithKey_Parms
		{
			FSafeFloat SF;
			FString Key;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeFloatWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeFloatWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeFloatWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeFloatWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Callable_GetSafeFloatWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Float Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeInt()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeInt_Parms
		{
			FSafeInt SI;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeInt_Parms), 0x0010000000000580);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Callable_GetSafeInt_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Int Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeIntWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeIntWithKey_Parms
		{
			FSafeInt SI;
			FString Key;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeIntWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeIntWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeIntWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeIntWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Callable_GetSafeIntWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets hidden value from 'Safe Int Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeName()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeName_Parms
		{
			FSafeName SN;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeName_Parms), 0x0010000000000580);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Callable_GetSafeName_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Name Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeNameWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeNameWithKey_Parms
		{
			FSafeName SN;
			FString Key;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeNameWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeNameWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeNameWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeNameWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Callable_GetSafeNameWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Name Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotator()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeRotator_Parms
		{
			FSafeRotator SR;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeRotator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeRotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeRotator_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Callable_GetSafeRotator_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Rotator Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotatorWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeRotatorWithKey_Parms
		{
			FSafeRotator SR;
			FString Key;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeRotatorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeRotatorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeRotatorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeRotatorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Callable_GetSafeRotatorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector4D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeString()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeString_Parms
		{
			FSafeString SS;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeString_Parms), 0x0010000000000580);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Callable_GetSafeString_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe String Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeStringWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeStringWithKey_Parms
		{
			FSafeString SS;
			FString Key;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeStringWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeStringWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeStringWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeStringWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Callable_GetSafeStringWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe String Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeText()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeText_Parms
		{
			FSafeText ST;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeText"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeText_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeText_Parms), 0x0010000000000580);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_GetSafeText_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Text Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTextWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeTextWithKey_Parms
		{
			FSafeText ST;
			FString Key;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeTextWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeTextWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeTextWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeTextWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_GetSafeTextWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Text Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransform()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeTransform_Parms
		{
			FSafeTransform ST;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeTransform_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeTransform_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_GetSafeTransform_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Transform Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransformWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeTransformWithKey_Parms
		{
			FSafeTransform ST;
			FString Key;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeTransformWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeTransformWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeTransformWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeTransformWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_GetSafeTransformWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Transform Struct'.\n      Custom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2D()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeVector2D_Parms
		{
			FSafeVector2D SV;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeVector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeVector2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeVector2D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_GetSafeVector2D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector2D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2DWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeVector2DWithKey_Parms
		{
			FSafeVector2D SV;
			FString Key;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeVector2DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeVector2DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeVector2DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeVector2DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_GetSafeVector2DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector2D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3D()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeVector3D_Parms
		{
			FSafeVector3D SV;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeVector3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeVector3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeVector3D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_GetSafeVector3D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector3D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3DWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeVector3DWithKey_Parms
		{
			FSafeVector3D SV;
			FString Key;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeVector3DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeVector3DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeVector3DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeVector3DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_GetSafeVector3DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector3D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4D()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeVector4D_Parms
		{
			FSafeVector4D SV;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeVector4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeVector4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeVector4D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_GetSafeVector4D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector4D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4DWithKey()
	{
		struct SCLibrary_eventSCL_Callable_GetSafeVector4DWithKey_Parms
		{
			FSafeVector4D SV;
			FString Key;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_GetSafeVector4DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_GetSafeVector4DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_GetSafeVector4DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_GetSafeVector4DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_GetSafeVector4DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Gets hidden value from 'Safe Vector4D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBool()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeBool_Parms
		{
			FSafeBool SB;
			bool Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeBool"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeBool_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeBool_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, SCLibrary_eventSCL_Callable_SetSafeBool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, SCLibrary_eventSCL_Callable_SetSafeBool_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(Value, SCLibrary_eventSCL_Callable_SetSafeBool_Parms), sizeof(bool), true);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_SetSafeBool_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Bool Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBoolWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms
		{
			FSafeBool SB;
			FString Key;
			bool Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeBoolWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(Value, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_SetSafeBoolWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Bool Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByte()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeByte_Parms
		{
			FSafeByte SB;
			uint8 Value;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeByte"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeByte_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeByte_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeByte_Parms), 0x0010000000000082);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_SetSafeByte_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Byte Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByteWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeByteWithKey_Parms
		{
			FSafeByte SB;
			FString Key;
			uint8 Value;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeByteWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeByteWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeByteWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeByteWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeByteWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Callable_SetSafeByteWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Byte Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColor()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeColor_Parms
		{
			FSafeColor SC;
			FLinearColor Value;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeColor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeColor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeColor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeColor_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Callable_SetSafeColor_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Color Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColorWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeColorWithKey_Parms
		{
			FSafeColor SC;
			FString Key;
			FLinearColor Value;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeColorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeColorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeColorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeColorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeColorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Callable_SetSafeColorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Color Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloat()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeFloat_Parms
		{
			FSafeFloat SF;
			float Value;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeFloat_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeFloat_Parms), 0x0010000000000082);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Callable_SetSafeFloat_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Float Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloatWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeFloatWithKey_Parms
		{
			FSafeFloat SF;
			FString Key;
			float Value;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeFloatWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeFloatWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeFloatWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeFloatWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeFloatWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Callable_SetSafeFloatWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Float Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeInt()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeInt_Parms
		{
			FSafeInt SI;
			int32 Value;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeInt_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeInt_Parms), 0x0010000000000082);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Callable_SetSafeInt_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Int Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeIntWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeIntWithKey_Parms
		{
			FSafeInt SI;
			FString Key;
			int32 Value;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeIntWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeIntWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeIntWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeIntWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeIntWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Callable_SetSafeIntWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Int Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeName()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeName_Parms
		{
			FSafeName SN;
			FName Value;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeName_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeName_Parms), 0x0010000000000082);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Callable_SetSafeName_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Name Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeNameWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeNameWithKey_Parms
		{
			FSafeName SN;
			FString Key;
			FName Value;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeNameWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeNameWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeNameWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeNameWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeNameWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Callable_SetSafeNameWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Name Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotator()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeRotator_Parms
		{
			FSafeRotator SR;
			FRotator Value;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeRotator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeRotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeRotator_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeRotator_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Callable_SetSafeRotator_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Rotator Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotatorWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeRotatorWithKey_Parms
		{
			FSafeRotator SR;
			FString Key;
			FRotator Value;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeRotatorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeRotatorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeRotatorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeRotatorWithKey_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeRotatorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Callable_SetSafeRotatorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Rotator Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeString()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeString_Parms
		{
			FSafeString SS;
			FString Value;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeString_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeString_Parms), 0x0010000000000082);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Callable_SetSafeString_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe String Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeStringWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeStringWithKey_Parms
		{
			FSafeString SS;
			FString Key;
			FString Value;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeStringWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeStringWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeStringWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeStringWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeStringWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Callable_SetSafeStringWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe String Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeText()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeText_Parms
		{
			FSafeText ST;
			FText Value;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeText"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeText_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeText_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeText_Parms), 0x0010000000000082);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_SetSafeText_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Text Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTextWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeTextWithKey_Parms
		{
			FSafeText ST;
			FString Key;
			FText Value;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeTextWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeTextWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeTextWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeTextWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeTextWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_SetSafeTextWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Text Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransform()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeTransform_Parms
		{
			FSafeTransform ST;
			FTransform Value;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeTransform_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeTransform_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeTransform_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_SetSafeTransform_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Transform Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransformWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeTransformWithKey_Parms
		{
			FSafeTransform ST;
			FString Key;
			FTransform Value;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeTransformWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeTransformWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeTransformWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeTransformWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeTransformWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Callable_SetSafeTransformWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Transform Struct'.\n      Custom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2D()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeVector2D_Parms
		{
			FSafeVector2D SV;
			FVector2D Value;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeVector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeVector2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeVector2D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeVector2D_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_SetSafeVector2D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Vector2D Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2DWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeVector2DWithKey_Parms
		{
			FSafeVector2D SV;
			FString Key;
			FVector2D Value;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeVector2DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeVector2DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeVector2DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeVector2DWithKey_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeVector2DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_SetSafeVector2DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Vector2D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3D()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeVector3D_Parms
		{
			FSafeVector3D SV;
			FVector Value;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeVector3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeVector3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeVector3D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeVector3D_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_SetSafeVector3D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Vector3D Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3DWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeVector3DWithKey_Parms
		{
			FSafeVector3D SV;
			FString Key;
			FVector Value;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeVector3DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeVector3DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeVector3DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeVector3DWithKey_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeVector3DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_SetSafeVector3DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Vector3D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4D()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeVector4D_Parms
		{
			FSafeVector4D SV;
			FVector4 Value;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeVector4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeVector4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeVector4D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeVector4D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_SetSafeVector4D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Vector4D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4DWithKey()
	{
		struct SCLibrary_eventSCL_Callable_SetSafeVector4DWithKey_Parms
		{
			FSafeVector4D SV;
			FString Key;
			FVector4 Value;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Callable_SetSafeVector4DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(SCLibrary_eventSCL_Callable_SetSafeVector4DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Callable_SetSafeVector4DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Callable_SetSafeVector4DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Callable_SetSafeVector4DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Callable_SetSafeVector4DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Callable:: Sets, and hides in memory, value for 'Safe Vector4D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBool()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeBool_Parms
		{
			FSafeBool SB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeBool"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeBool_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeBool_Parms), sizeof(bool), true);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_GetSafeBool_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Bool Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBoolWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms
		{
			FSafeBool SB;
			FString Key;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeBoolWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_GetSafeBoolWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Bool Struct'.\n      Custom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByte()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeByte_Parms
		{
			FSafeByte SB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeByte"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeByte_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeByte_Parms), 0x0010000000000580);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_GetSafeByte_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Byte Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByteWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeByteWithKey_Parms
		{
			FSafeByte SB;
			FString Key;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeByteWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeByteWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeByteWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeByteWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_GetSafeByteWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Byte Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColor()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeColor_Parms
		{
			FSafeColor SC;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeColor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeColor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeColor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Pure_GetSafeColor_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Color Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColorWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeColorWithKey_Parms
		{
			FSafeColor SC;
			FString Key;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeColorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeColorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeColorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeColorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Pure_GetSafeColorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Color Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloat()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeFloat_Parms
		{
			FSafeFloat SF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeFloat_Parms), 0x0010000000000580);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Pure_GetSafeFloat_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Float Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloatWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeFloatWithKey_Parms
		{
			FSafeFloat SF;
			FString Key;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeFloatWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeFloatWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeFloatWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeFloatWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Pure_GetSafeFloatWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Float Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeInt()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeInt_Parms
		{
			FSafeInt SI;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeInt_Parms), 0x0010000000000580);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Pure_GetSafeInt_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Int Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeIntWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeIntWithKey_Parms
		{
			FSafeInt SI;
			FString Key;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeIntWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeIntWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeIntWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeIntWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Pure_GetSafeIntWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Int Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeName()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeName_Parms
		{
			FSafeName SN;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeName_Parms), 0x0010000000000580);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Pure_GetSafeName_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Name Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeNameWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeNameWithKey_Parms
		{
			FSafeName SN;
			FString Key;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeNameWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeNameWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeNameWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeNameWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Pure_GetSafeNameWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Name Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotator()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeRotator_Parms
		{
			FSafeRotator SR;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeRotator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeRotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeRotator_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Pure_GetSafeRotator_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Rotator Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotatorWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeRotatorWithKey_Parms
		{
			FSafeRotator SR;
			FString Key;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeRotatorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeRotatorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeRotatorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeRotatorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Pure_GetSafeRotatorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Rotator Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeString()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeString_Parms
		{
			FSafeString SS;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeString_Parms), 0x0010000000000580);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Pure_GetSafeString_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe String Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeStringWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeStringWithKey_Parms
		{
			FSafeString SS;
			FString Key;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeStringWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeStringWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeStringWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeStringWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Pure_GetSafeStringWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe String Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeText()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeText_Parms
		{
			FSafeText ST;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeText"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeText_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeText_Parms), 0x0010000000000580);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_GetSafeText_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Text Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTextWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeTextWithKey_Parms
		{
			FSafeText ST;
			FString Key;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeTextWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeTextWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeTextWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeTextWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_GetSafeTextWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Text Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransform()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeTransform_Parms
		{
			FSafeTransform ST;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeTransform_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeTransform_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_GetSafeTransform_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Transform Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransformWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeTransformWithKey_Parms
		{
			FSafeTransform ST;
			FString Key;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeTransformWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeTransformWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeTransformWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeTransformWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_GetSafeTransformWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Transform Struct'.\n      Custom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2D()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeVector2D_Parms
		{
			FSafeVector2D SV;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeVector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeVector2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeVector2D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_GetSafeVector2D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Vector2D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2DWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeVector2DWithKey_Parms
		{
			FSafeVector2D SV;
			FString Key;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeVector2DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeVector2DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeVector2DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeVector2DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_GetSafeVector2DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Vector2D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3D()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeVector3D_Parms
		{
			FSafeVector3D SV;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeVector3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeVector3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeVector3D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_GetSafeVector3D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Vector3D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3DWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeVector3DWithKey_Parms
		{
			FSafeVector3D SV;
			FString Key;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeVector3DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeVector3DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeVector3DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeVector3DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_GetSafeVector3DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Vector3D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4D()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeVector4D_Parms
		{
			FSafeVector4D SV;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeVector4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeVector4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeVector4D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_GetSafeVector4D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Vector4D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4DWithKey()
	{
		struct SCLibrary_eventSCL_Pure_GetSafeVector4DWithKey_Parms
		{
			FSafeVector4D SV;
			FString Key;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_GetSafeVector4DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_GetSafeVector4DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_GetSafeVector4DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_GetSafeVector4DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_GetSafeVector4DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Gets hidden value from 'Safe Vector4D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBool()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeBool_Parms
		{
			FSafeBool SB;
			bool Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeBool"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeBool_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeBool_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, SCLibrary_eventSCL_Pure_SetSafeBool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, SCLibrary_eventSCL_Pure_SetSafeBool_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(Value, SCLibrary_eventSCL_Pure_SetSafeBool_Parms), sizeof(bool), true);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_SetSafeBool_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Bool Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBoolWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms
		{
			FSafeBool SB;
			FString Key;
			bool Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeBoolWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(Value, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_SetSafeBoolWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Bool Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByte()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeByte_Parms
		{
			FSafeByte SB;
			uint8 Value;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeByte"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeByte_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeByte_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeByte_Parms), 0x0010000000000082);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_SetSafeByte_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Byte Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByteWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeByteWithKey_Parms
		{
			FSafeByte SB;
			FString Key;
			uint8 Value;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeByteWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeByteWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeByteWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeByteWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeByteWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SB, SCLibrary_eventSCL_Pure_SetSafeByteWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Byte Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColor()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeColor_Parms
		{
			FSafeColor SC;
			FLinearColor Value;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeColor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeColor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeColor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeColor_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Pure_SetSafeColor_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Color Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColorWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeColorWithKey_Parms
		{
			FSafeColor SC;
			FString Key;
			FLinearColor Value;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeColorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeColorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeColorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeColorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeColorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SC, SCLibrary_eventSCL_Pure_SetSafeColorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Color Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloat()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeFloat_Parms
		{
			FSafeFloat SF;
			float Value;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeFloat_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeFloat_Parms), 0x0010000000000082);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Pure_SetSafeFloat_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Float Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloatWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeFloatWithKey_Parms
		{
			FSafeFloat SF;
			FString Key;
			float Value;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeFloatWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeFloatWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeFloatWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeFloatWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeFloatWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SF, SCLibrary_eventSCL_Pure_SetSafeFloatWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Float Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeInt()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeInt_Parms
		{
			FSafeInt SI;
			int32 Value;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeInt_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeInt_Parms), 0x0010000000000082);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Pure_SetSafeInt_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Int Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeIntWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeIntWithKey_Parms
		{
			FSafeInt SI;
			FString Key;
			int32 Value;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeIntWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeIntWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeIntWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeIntWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeIntWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SI, SCLibrary_eventSCL_Pure_SetSafeIntWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Int"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Int Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeName()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeName_Parms
		{
			FSafeName SN;
			FName Value;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeName_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeName_Parms), 0x0010000000000082);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Pure_SetSafeName_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Name Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeNameWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeNameWithKey_Parms
		{
			FSafeName SN;
			FString Key;
			FName Value;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeNameWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeNameWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeNameWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeNameWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeNameWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SN"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SN, SCLibrary_eventSCL_Pure_SetSafeNameWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeName());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Name"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Name Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotator()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeRotator_Parms
		{
			FSafeRotator SR;
			FRotator Value;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeRotator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeRotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeRotator_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeRotator_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Pure_SetSafeRotator_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Rotator Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotatorWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeRotatorWithKey_Parms
		{
			FSafeRotator SR;
			FString Key;
			FRotator Value;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeRotatorWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeRotatorWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeRotatorWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeRotatorWithKey_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeRotatorWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SR = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SR"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SR, SCLibrary_eventSCL_Pure_SetSafeRotatorWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Rotator Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeString()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeString_Parms
		{
			FSafeString SS;
			FString Value;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeString_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeString_Parms), 0x0010000000000082);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Pure_SetSafeString_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe String Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeStringWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeStringWithKey_Parms
		{
			FSafeString SS;
			FString Key;
			FString Value;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeStringWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeStringWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeStringWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeStringWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeStringWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SS"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SS, SCLibrary_eventSCL_Pure_SetSafeStringWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeString());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe String Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeText()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeText_Parms
		{
			FSafeText ST;
			FText Value;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeText"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeText_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeText_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeText_Parms), 0x0010000000000082);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_SetSafeText_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Text Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTextWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeTextWithKey_Parms
		{
			FSafeText ST;
			FString Key;
			FText Value;
			FText ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeTextWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeTextWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeTextWithKey_Parms), 0x0010000000000580);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeTextWithKey_Parms), 0x0010000000000082);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeTextWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_SetSafeTextWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeText());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Text Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransform()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeTransform_Parms
		{
			FSafeTransform ST;
			FTransform Value;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeTransform_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeTransform_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeTransform_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_SetSafeTransform_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Transform Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransformWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeTransformWithKey_Parms
		{
			FSafeTransform ST;
			FString Key;
			FTransform Value;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeTransformWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeTransformWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeTransformWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeTransformWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeTransformWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_ST = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ST"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ST, SCLibrary_eventSCL_Pure_SetSafeTransformWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeTransform());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Transform Struct'.\n      Custom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2D()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeVector2D_Parms
		{
			FSafeVector2D SV;
			FVector2D Value;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeVector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeVector2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeVector2D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeVector2D_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_SetSafeVector2D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Vector2D Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2DWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeVector2DWithKey_Parms
		{
			FSafeVector2D SV;
			FString Key;
			FVector2D Value;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeVector2DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeVector2DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeVector2DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeVector2DWithKey_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeVector2DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_SetSafeVector2DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector2D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Vector2D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3D()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeVector3D_Parms
		{
			FSafeVector3D SV;
			FVector Value;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeVector3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeVector3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeVector3D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeVector3D_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_SetSafeVector3D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Vector3D Struct'."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3DWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeVector3DWithKey_Parms
		{
			FSafeVector3D SV;
			FString Key;
			FVector Value;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeVector3DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeVector3DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeVector3DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeVector3DWithKey_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeVector3DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_SetSafeVector3DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector3D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector3D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Vector3D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
			MetaData->SetValue(NewProp_Value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4D()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeVector4D_Parms
		{
			FSafeVector4D SV;
			FVector4 Value;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeVector4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeVector4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeVector4D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeVector4D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_SetSafeVector4D_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Vector4D Struct'."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4DWithKey()
	{
		struct SCLibrary_eventSCL_Pure_SetSafeVector4DWithKey_Parms
		{
			FSafeVector4D SV;
			FString Key;
			FVector4 Value;
			FVector4 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCL_Pure_SetSafeVector4DWithKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCL_Pure_SetSafeVector4DWithKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCL_Pure_SetSafeVector4DWithKey_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, SCLibrary_eventSCL_Pure_SetSafeVector4DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FVector4());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, SCLibrary_eventSCL_Pure_SetSafeVector4DWithKey_Parms), 0x0010000000000080);
			UProperty* NewProp_SV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SV, SCLibrary_eventSCL_Pure_SetSafeVector4DWithKey_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeVector4D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Security"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Vector4D"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pure:: Sets, and hides in memory, value for 'Safe Vector4D Struct'.\nCustom Key Required: If have custom encryption Key, attach to Key input value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolAndFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms
		{
			bool NB;
			FSafeBool FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetBoolAndFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NB, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms, bool);
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NB, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms), 0x0010000008000180, CPP_BOOL_PROPERTY_BITMASK(NB, SCLibrary_eventSCO_Pure_GetBoolAndFSB_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("&&"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("&& (Safe Bool)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool AND &&"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Bool && Safe Bool"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms
		{
			bool NB;
			FSafeBool FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetBoolEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NB, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms, bool);
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NB, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms), 0x0010000008000180, CPP_BOOL_PROPERTY_BITMASK(NB, SCLibrary_eventSCO_Pure_GetBoolEqualFSB_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("=="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("== (Safe Bool)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool EQUAL =="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Bool == Safe Bool"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolNotEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms
		{
			bool NB;
			FSafeBool FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetBoolNotEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NB, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms, bool);
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NB, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms), 0x0010000008000180, CPP_BOOL_PROPERTY_BITMASK(NB, SCLibrary_eventSCO_Pure_GetBoolNotEqualFSB_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("!="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("!= (Safe Bool)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool NOT !="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Bool != Safe Bool"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolOrFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms
		{
			bool NB;
			FSafeBool FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetBoolOrFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeBool());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NB, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms, bool);
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NB, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms), 0x0010000008000180, CPP_BOOL_PROPERTY_BITMASK(NB, SCLibrary_eventSCO_Pure_GetBoolOrFSB_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("||"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("|| (Safe Bool)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Bool OR ||"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Bool || Safe Bool"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteAndFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteAndFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteAndFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteAndFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteAndFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteAndFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteAndFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("&"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("& (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte AND &"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte & Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteDivideFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteDivideFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteDivideFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteDivideFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteDivideFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteDivideFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteDivideFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("/"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("/ (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte DIVIDE /"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte / Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteEqualFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("=="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("== (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte EQUAL =="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte == Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteGreaterEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteGreaterEqualFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT(">= (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte GREATER EQUAL >="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte >= Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteGreaterFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteGreaterFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("> (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte GREATER >"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte > Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteMinusEqualFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteMinusEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteMinusEqualFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteMinusEqualFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteMinusEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteMinusEqualFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("-= (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte MINUS EQUAL -="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte -= Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteMinusFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteMinusFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteMinusFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteMinusFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteMinusFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteMinusFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("- (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte MINUS -"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte - Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteModFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteModFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteModFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteModFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteModFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteModFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteModFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("%"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("% (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte MOD %"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte % Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteNotEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteNotEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteNotEqualFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("!="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("!= (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte NOT !="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte != Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteOrFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteOrFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteOrFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteOrFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteOrFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteOrFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteOrFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("|"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("| (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte OR |"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte | Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetBytePlusEqualFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetBytePlusEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetBytePlusEqualFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetBytePlusEqualFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetBytePlusEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetBytePlusEqualFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("+="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("+= (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte PLUS EQUAL +="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte += Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetBytePlusFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetBytePlusFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetBytePlusFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetBytePlusFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetBytePlusFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetBytePlusFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("+"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("+ (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte PLUS +"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte + Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftLFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteShiftLFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteShiftLFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteShiftLFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteShiftLFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteShiftLFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteShiftLFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("<<"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("<< (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte SHIFT <<"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte << Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftRFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteShiftRFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteShiftRFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteShiftRFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteShiftRFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteShiftRFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteShiftRFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">>"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT(">> (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte SHIFT >>"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte >> Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerEqualFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteSmallerEqualFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteSmallerEqualFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("<="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("<= (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte LESS EQUAL <="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte <= Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteSmallerFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms), sizeof(bool), true);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteSmallerFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("<"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("< (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte LESS <"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte < Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteTimesFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteTimesFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteTimesFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteTimesFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteTimesFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteTimesFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteTimesFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("*"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("* (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte TIMES *"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte * Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteXorFSB()
	{
		struct SCLibrary_eventSCO_Pure_GetByteXorFSB_Parms
		{
			uint8 NB;
			FSafeByte FSB;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetByteXorFSB"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetByteXorFSB_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetByteXorFSB_Parms), 0x0010000000000580);
			UProperty* NewProp_FSB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSB, SCLibrary_eventSCO_Pure_GetByteXorFSB_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeByte());
			UProperty* NewProp_NB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NB"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NB, SCLibrary_eventSCO_Pure_GetByteXorFSB_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("^"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("^ (Safe Byte)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Byte XOR ^"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Byte ^ Safe Byte"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorEqualFSC()
	{
		struct SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms
		{
			FLinearColor NC;
			FSafeColor FSC;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetColorEqualFSC"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms), sizeof(bool), true);
			UProperty* NewProp_FSC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSC, SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			UProperty* NewProp_NC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NC, SCLibrary_eventSCO_Pure_GetColorEqualFSC_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FLinearColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("=="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("== (Safe Color)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color EQUAL =="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Color == Safe Color"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorNotEqualFSC()
	{
		struct SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms
		{
			FLinearColor NC;
			FSafeColor FSC;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetColorNotEqualFSC"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms), sizeof(bool), true);
			UProperty* NewProp_FSC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSC, SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeColor());
			UProperty* NewProp_NC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NC"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NC, SCLibrary_eventSCO_Pure_GetColorNotEqualFSC_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FLinearColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("!="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("!= (Safe Color)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Color NOT !="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Color != Safe Color"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatDivideFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatDivideFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatDivideFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatDivideFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatDivideFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatDivideFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatDivideFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("/"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("/ (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float DIVIDE /"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float / Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatEqualFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatEqualFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms), sizeof(bool), true);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatEqualFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("=="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("== (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float EQUAL =="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float == Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterEqualFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatGreaterEqualFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms), sizeof(bool), true);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatGreaterEqualFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT(">= (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float GREATER EQUAL >="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float >= Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatGreaterFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms), sizeof(bool), true);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatGreaterFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("> (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float GREATER >"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float > Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusEqualFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatMinusEqualFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatMinusEqualFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatMinusEqualFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatMinusEqualFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatMinusEqualFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatMinusEqualFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("-= (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float MINUS EQUAL -="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float -= Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatMinusFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatMinusFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatMinusFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatMinusFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatMinusFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatMinusFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("- (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float MINUS -"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float - Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatModFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatModFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatModFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatModFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatModFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatModFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatModFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("%"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("% (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float MOD %"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float % Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatNotEqualFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatNotEqualFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms), sizeof(bool), true);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatNotEqualFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("!="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("!= (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float NOT !="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float != Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusEqualFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatPlusEqualFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatPlusEqualFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatPlusEqualFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatPlusEqualFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatPlusEqualFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatPlusEqualFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("+="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("+= (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float PLUS EQUAL +="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float += Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatPlusFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatPlusFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatPlusFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatPlusFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatPlusFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatPlusFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("+"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("+ (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float PLUS +"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float + Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerEqualFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatSmallerEqualFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms), sizeof(bool), true);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatSmallerEqualFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("<="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("<= (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float LESS EQUAL <="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float <= Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatSmallerFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms), sizeof(bool), true);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatSmallerFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("<"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("< (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float LESS <"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float < Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatTimesFSF()
	{
		struct SCLibrary_eventSCO_Pure_GetFloatTimesFSF_Parms
		{
			float NF;
			FSafeFloat FSF;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetFloatTimesFSF"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetFloatTimesFSF_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetFloatTimesFSF_Parms), 0x0010000000000580);
			UProperty* NewProp_FSF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSF"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSF, SCLibrary_eventSCO_Pure_GetFloatTimesFSF_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeFloat());
			UProperty* NewProp_NF = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NF"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NF, SCLibrary_eventSCO_Pure_GetFloatTimesFSF_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("*"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("* (Safe Float)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Float TIMES *"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Float * Safe Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntAndFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntAndFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntAndFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntAndFSI_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetIntAndFSI_Parms), 0x0010000000000580);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntAndFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntAndFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("&"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("& (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer AND &"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer & Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntDivideFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntDivideFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntDivideFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntDivideFSI_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetIntDivideFSI_Parms), 0x0010000000000580);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntDivideFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntDivideFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("/"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("/ (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer DIVIDE /"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer / Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntEqualFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntEqualFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms), sizeof(bool), true);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntEqualFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("=="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("== (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer EQUAL =="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer == Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterEqualFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntGreaterEqualFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms), sizeof(bool), true);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntGreaterEqualFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT(">= (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer GREATER EQUAL >="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer >= Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntGreaterFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms), sizeof(bool), true);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntGreaterFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT(">"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("> (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer GREATER >"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer > Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusEqualFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntMinusEqualFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntMinusEqualFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntMinusEqualFSI_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetIntMinusEqualFSI_Parms), 0x0010000000000580);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntMinusEqualFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntMinusEqualFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-="));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("-= (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer MINUS EQUAL -="));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer -= Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusFSI()
	{
		struct SCLibrary_eventSCO_Pure_GetIntMinusFSI_Parms
		{
			int32 NI;
			FSafeInt FSI;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USCLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SCO_Pure_GetIntMinusFSI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(SCLibrary_eventSCO_Pure_GetIntMinusFSI_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SCLibrary_eventSCO_Pure_GetIntMinusFSI_Parms), 0x0010000000000580);
			UProperty* NewProp_FSI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FSI"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FSI, SCLibrary_eventSCO_Pure_GetIntMinusFSI_Parms), 0x0010000008000180, Z_Construct_UScriptStruct_FSafeInt());
			UProperty* NewProp_NI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NI"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NI, SCLibrary_eventSCO_Pure_GetIntMinusFSI_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Variables|Security"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("- (Safe Integer)"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Security Get Safe Integer MINUS -"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get:: Integer - Safe Integer"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USCLibrary_NoRegister()
	{
		return USCLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_USCLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_SCUE4();
			OuterClass = USCLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBoolWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByteWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloatWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeIntWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeNameWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotatorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeStringWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTextWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransformWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBoolWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByteWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloatWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeIntWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeNameWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotatorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeStringWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTextWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransformWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBoolWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByteWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloatWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeIntWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeNameWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotatorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeStringWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTextWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransformWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBoolWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByteWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloatWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeIntWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeNameWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotatorWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeStringWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTextWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransformWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4DWithKey());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolAndFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolNotEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolOrFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteAndFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteDivideFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteModFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteNotEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteOrFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftLFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftRFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteTimesFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteXorFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorEqualFSC());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorNotEqualFSC());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatDivideFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatModFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatNotEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatTimesFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntAndFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntDivideFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntModFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntNotEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntOrFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntPlusEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntPlusFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntShiftLFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntShiftRFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntSmallerEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntSmallerFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntTimesFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntXorFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameGreaterFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameNotEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNamePlusEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNamePlusFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameSmallerFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorDivideFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorGreaterEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorGreaterFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorMinusEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorMinusFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorModFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorNotEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorPlusEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorPlusFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorSmallerEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorSmallerFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorTimesFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolAndBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolAndFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolEqualBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolNotEqualBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolNotEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolOrBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolOrFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteAndByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteAndFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDecreaseFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDivideByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDivideFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteIncreaseFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteModByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteModFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteOrByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteOrFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftLByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftLFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftRByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftRFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteTimesByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteTimesFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteXorByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteXorFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorEqualColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorEqualFSC());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorNotEqualColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorNotEqualFSC());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDecreaseFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDivideFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDivideFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatIncreaseFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatModFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatModFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatNotEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatNotEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatTimesFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatTimesFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntAndFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntAndInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDecreaseFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDivideFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDivideInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntIncreaseFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntModFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntModInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntOrFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntOrInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftLFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftLInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftRFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftRInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntTimesFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntTimesInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntXorFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntXorInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameEqualName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameGreaterFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameGreaterName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameNotEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameNotEqualName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusEqualName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameSmallerFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameSmallerName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDecreaseFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDivideFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDivideRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorIncreaseFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorModFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorModRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorNotEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorNotEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorTimesFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorTimesRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringEqualString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringGreaterFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringGreaterString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringNotEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringNotEqualString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusEqualString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringSmallerFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringSmallerString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextEqualText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextGreaterFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextGreaterText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextNotEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextNotEqualText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusEqualText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextSmallerFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextSmallerText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformEqualTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformNotEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformNotEqualTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDecreaseFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDivideFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDivideVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DIncreaseFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DModFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DModVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DNotEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DNotEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DTimesFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DTimesVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDecreaseFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDivideFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDivideVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DIncreaseFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DModFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DModVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DNotEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DNotEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DTimesFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DTimesVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDecreaseFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDivideFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDivideVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DIncreaseFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DModFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DModVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DNotEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DNotEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DTimesFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DTimesVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringGreaterFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringNotEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringPlusEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringPlusFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringSmallerFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextGreaterFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextNotEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextPlusEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextPlusFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextSmallerFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTransformEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTransformNotEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DDivideFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DGreaterEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DGreaterFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DMinusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DMinusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DModFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DNotEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DPlusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DPlusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DSmallerEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DSmallerFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DTimesFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DDivideFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DGreaterEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DGreaterFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DMinusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DMinusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DModFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DNotEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DPlusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DPlusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DSmallerEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DSmallerFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DTimesFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DDivideFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DGreaterEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DGreaterFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DMinusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DMinusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DModFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DNotEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DPlusEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DPlusFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DSmallerEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DSmallerFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DTimesFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetBoolEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetByteEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetColorEqualFSC());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetFloatEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetIntEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetNameEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetRotatorEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeBoolEqualBool());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeBoolEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeByteEqualByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeByteEqualFSB());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeColorEqualColor());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeColorEqualFSC());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeFloatEqualFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeFloatEqualFSF());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeIntEqualFSI());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeIntEqualInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeNameEqualFSN());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeNameEqualName());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeRotatorEqualFSR());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeRotatorEqualRotator());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeStringEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeStringEqualString());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTextEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTextEqualText());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTransformEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTransformEqualTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector2DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector2DEqualVector2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector3DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector3DEqualVector3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector4DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector4DEqualVector4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetStringEqualFSS());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetTextEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetTransformEqualFST());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector2DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector3DEqualFSV());
				OuterClass->LinkChild(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector4DEqualFSV());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBool(), "SCL_Callable_GetSafeBool"); // 1824593957
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeBoolWithKey(), "SCL_Callable_GetSafeBoolWithKey"); // 1994859509
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByte(), "SCL_Callable_GetSafeByte"); // 2468682576
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeByteWithKey(), "SCL_Callable_GetSafeByteWithKey"); // 385803800
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColor(), "SCL_Callable_GetSafeColor"); // 3152287614
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeColorWithKey(), "SCL_Callable_GetSafeColorWithKey"); // 1110667042
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloat(), "SCL_Callable_GetSafeFloat"); // 2057819975
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeFloatWithKey(), "SCL_Callable_GetSafeFloatWithKey"); // 1062556376
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeInt(), "SCL_Callable_GetSafeInt"); // 3595631300
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeIntWithKey(), "SCL_Callable_GetSafeIntWithKey"); // 2372885122
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeName(), "SCL_Callable_GetSafeName"); // 3371805391
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeNameWithKey(), "SCL_Callable_GetSafeNameWithKey"); // 1452932527
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotator(), "SCL_Callable_GetSafeRotator"); // 2444599244
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeRotatorWithKey(), "SCL_Callable_GetSafeRotatorWithKey"); // 760604754
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeString(), "SCL_Callable_GetSafeString"); // 3166208710
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeStringWithKey(), "SCL_Callable_GetSafeStringWithKey"); // 1374592571
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeText(), "SCL_Callable_GetSafeText"); // 1467754178
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTextWithKey(), "SCL_Callable_GetSafeTextWithKey"); // 3081562720
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransform(), "SCL_Callable_GetSafeTransform"); // 1784893236
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeTransformWithKey(), "SCL_Callable_GetSafeTransformWithKey"); // 1002966455
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2D(), "SCL_Callable_GetSafeVector2D"); // 3677808109
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector2DWithKey(), "SCL_Callable_GetSafeVector2DWithKey"); // 3207778918
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3D(), "SCL_Callable_GetSafeVector3D"); // 2514835930
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector3DWithKey(), "SCL_Callable_GetSafeVector3DWithKey"); // 3569831913
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4D(), "SCL_Callable_GetSafeVector4D"); // 3085635887
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_GetSafeVector4DWithKey(), "SCL_Callable_GetSafeVector4DWithKey"); // 331504580
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBool(), "SCL_Callable_SetSafeBool"); // 3837431845
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeBoolWithKey(), "SCL_Callable_SetSafeBoolWithKey"); // 3250342075
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByte(), "SCL_Callable_SetSafeByte"); // 1410123142
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeByteWithKey(), "SCL_Callable_SetSafeByteWithKey"); // 919952160
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColor(), "SCL_Callable_SetSafeColor"); // 2709350856
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeColorWithKey(), "SCL_Callable_SetSafeColorWithKey"); // 2952960731
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloat(), "SCL_Callable_SetSafeFloat"); // 3748992402
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeFloatWithKey(), "SCL_Callable_SetSafeFloatWithKey"); // 623537752
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeInt(), "SCL_Callable_SetSafeInt"); // 2056701836
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeIntWithKey(), "SCL_Callable_SetSafeIntWithKey"); // 4273277624
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeName(), "SCL_Callable_SetSafeName"); // 3906028414
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeNameWithKey(), "SCL_Callable_SetSafeNameWithKey"); // 3807518900
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotator(), "SCL_Callable_SetSafeRotator"); // 1500960125
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeRotatorWithKey(), "SCL_Callable_SetSafeRotatorWithKey"); // 3709803736
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeString(), "SCL_Callable_SetSafeString"); // 2298093536
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeStringWithKey(), "SCL_Callable_SetSafeStringWithKey"); // 255775177
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeText(), "SCL_Callable_SetSafeText"); // 2853603903
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTextWithKey(), "SCL_Callable_SetSafeTextWithKey"); // 2447227522
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransform(), "SCL_Callable_SetSafeTransform"); // 1246405686
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeTransformWithKey(), "SCL_Callable_SetSafeTransformWithKey"); // 3996490744
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2D(), "SCL_Callable_SetSafeVector2D"); // 461871954
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector2DWithKey(), "SCL_Callable_SetSafeVector2DWithKey"); // 385718359
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3D(), "SCL_Callable_SetSafeVector3D"); // 2283501313
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector3DWithKey(), "SCL_Callable_SetSafeVector3DWithKey"); // 3085915230
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4D(), "SCL_Callable_SetSafeVector4D"); // 2544681086
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Callable_SetSafeVector4DWithKey(), "SCL_Callable_SetSafeVector4DWithKey"); // 3153106865
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBool(), "SCL_Pure_GetSafeBool"); // 2862934729
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeBoolWithKey(), "SCL_Pure_GetSafeBoolWithKey"); // 400532385
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByte(), "SCL_Pure_GetSafeByte"); // 4183415738
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeByteWithKey(), "SCL_Pure_GetSafeByteWithKey"); // 2577062036
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColor(), "SCL_Pure_GetSafeColor"); // 747121584
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeColorWithKey(), "SCL_Pure_GetSafeColorWithKey"); // 340979293
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloat(), "SCL_Pure_GetSafeFloat"); // 2582484715
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeFloatWithKey(), "SCL_Pure_GetSafeFloatWithKey"); // 525931018
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeInt(), "SCL_Pure_GetSafeInt"); // 3286817383
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeIntWithKey(), "SCL_Pure_GetSafeIntWithKey"); // 4102650604
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeName(), "SCL_Pure_GetSafeName"); // 2656220489
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeNameWithKey(), "SCL_Pure_GetSafeNameWithKey"); // 3944010903
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotator(), "SCL_Pure_GetSafeRotator"); // 1424367534
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeRotatorWithKey(), "SCL_Pure_GetSafeRotatorWithKey"); // 410007631
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeString(), "SCL_Pure_GetSafeString"); // 516209047
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeStringWithKey(), "SCL_Pure_GetSafeStringWithKey"); // 4080735391
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeText(), "SCL_Pure_GetSafeText"); // 887444586
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTextWithKey(), "SCL_Pure_GetSafeTextWithKey"); // 2601239912
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransform(), "SCL_Pure_GetSafeTransform"); // 920988816
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeTransformWithKey(), "SCL_Pure_GetSafeTransformWithKey"); // 2502126837
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2D(), "SCL_Pure_GetSafeVector2D"); // 2211278287
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector2DWithKey(), "SCL_Pure_GetSafeVector2DWithKey"); // 2366493513
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3D(), "SCL_Pure_GetSafeVector3D"); // 1668662198
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector3DWithKey(), "SCL_Pure_GetSafeVector3DWithKey"); // 3421907928
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4D(), "SCL_Pure_GetSafeVector4D"); // 1973715099
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_GetSafeVector4DWithKey(), "SCL_Pure_GetSafeVector4DWithKey"); // 1983191431
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBool(), "SCL_Pure_SetSafeBool"); // 573077481
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeBoolWithKey(), "SCL_Pure_SetSafeBoolWithKey"); // 213893746
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByte(), "SCL_Pure_SetSafeByte"); // 1550617901
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeByteWithKey(), "SCL_Pure_SetSafeByteWithKey"); // 3213309422
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColor(), "SCL_Pure_SetSafeColor"); // 2805929210
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeColorWithKey(), "SCL_Pure_SetSafeColorWithKey"); // 3955246590
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloat(), "SCL_Pure_SetSafeFloat"); // 2093506362
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeFloatWithKey(), "SCL_Pure_SetSafeFloatWithKey"); // 2245649956
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeInt(), "SCL_Pure_SetSafeInt"); // 1972150159
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeIntWithKey(), "SCL_Pure_SetSafeIntWithKey"); // 2803277672
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeName(), "SCL_Pure_SetSafeName"); // 975439541
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeNameWithKey(), "SCL_Pure_SetSafeNameWithKey"); // 2076845821
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotator(), "SCL_Pure_SetSafeRotator"); // 1592584979
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeRotatorWithKey(), "SCL_Pure_SetSafeRotatorWithKey"); // 48422603
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeString(), "SCL_Pure_SetSafeString"); // 1758306199
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeStringWithKey(), "SCL_Pure_SetSafeStringWithKey"); // 3572562673
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeText(), "SCL_Pure_SetSafeText"); // 3972548604
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTextWithKey(), "SCL_Pure_SetSafeTextWithKey"); // 1966657780
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransform(), "SCL_Pure_SetSafeTransform"); // 2769172485
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeTransformWithKey(), "SCL_Pure_SetSafeTransformWithKey"); // 3484029198
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2D(), "SCL_Pure_SetSafeVector2D"); // 1953926306
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector2DWithKey(), "SCL_Pure_SetSafeVector2DWithKey"); // 2291431195
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3D(), "SCL_Pure_SetSafeVector3D"); // 3461834122
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector3DWithKey(), "SCL_Pure_SetSafeVector3DWithKey"); // 1191515991
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4D(), "SCL_Pure_SetSafeVector4D"); // 932045610
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCL_Pure_SetSafeVector4DWithKey(), "SCL_Pure_SetSafeVector4DWithKey"); // 2381509180
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolAndFSB(), "SCO_Pure_GetBoolAndFSB"); // 4224227837
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolEqualFSB(), "SCO_Pure_GetBoolEqualFSB"); // 4260177469
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolNotEqualFSB(), "SCO_Pure_GetBoolNotEqualFSB"); // 1054749968
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBoolOrFSB(), "SCO_Pure_GetBoolOrFSB"); // 1623149413
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteAndFSB(), "SCO_Pure_GetByteAndFSB"); // 2213008774
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteDivideFSB(), "SCO_Pure_GetByteDivideFSB"); // 2961052433
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteEqualFSB(), "SCO_Pure_GetByteEqualFSB"); // 3028738503
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterEqualFSB(), "SCO_Pure_GetByteGreaterEqualFSB"); // 1097412690
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteGreaterFSB(), "SCO_Pure_GetByteGreaterFSB"); // 1581582695
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusEqualFSB(), "SCO_Pure_GetByteMinusEqualFSB"); // 974857757
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteMinusFSB(), "SCO_Pure_GetByteMinusFSB"); // 81974533
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteModFSB(), "SCO_Pure_GetByteModFSB"); // 386764631
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteNotEqualFSB(), "SCO_Pure_GetByteNotEqualFSB"); // 4245840296
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteOrFSB(), "SCO_Pure_GetByteOrFSB"); // 3826294226
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusEqualFSB(), "SCO_Pure_GetBytePlusEqualFSB"); // 2237551508
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetBytePlusFSB(), "SCO_Pure_GetBytePlusFSB"); // 3924931303
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftLFSB(), "SCO_Pure_GetByteShiftLFSB"); // 1229757140
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteShiftRFSB(), "SCO_Pure_GetByteShiftRFSB"); // 2083185730
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerEqualFSB(), "SCO_Pure_GetByteSmallerEqualFSB"); // 1719986574
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteSmallerFSB(), "SCO_Pure_GetByteSmallerFSB"); // 1080788634
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteTimesFSB(), "SCO_Pure_GetByteTimesFSB"); // 1294652272
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetByteXorFSB(), "SCO_Pure_GetByteXorFSB"); // 3048206976
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorEqualFSC(), "SCO_Pure_GetColorEqualFSC"); // 778175522
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetColorNotEqualFSC(), "SCO_Pure_GetColorNotEqualFSC"); // 3174083502
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatDivideFSF(), "SCO_Pure_GetFloatDivideFSF"); // 2760338541
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatEqualFSF(), "SCO_Pure_GetFloatEqualFSF"); // 469060834
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterEqualFSF(), "SCO_Pure_GetFloatGreaterEqualFSF"); // 3848356866
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatGreaterFSF(), "SCO_Pure_GetFloatGreaterFSF"); // 1561449552
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusEqualFSF(), "SCO_Pure_GetFloatMinusEqualFSF"); // 1705632378
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatMinusFSF(), "SCO_Pure_GetFloatMinusFSF"); // 2745866749
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatModFSF(), "SCO_Pure_GetFloatModFSF"); // 1178064784
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatNotEqualFSF(), "SCO_Pure_GetFloatNotEqualFSF"); // 1966406663
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusEqualFSF(), "SCO_Pure_GetFloatPlusEqualFSF"); // 988895394
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatPlusFSF(), "SCO_Pure_GetFloatPlusFSF"); // 3966122686
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerEqualFSF(), "SCO_Pure_GetFloatSmallerEqualFSF"); // 2417279562
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatSmallerFSF(), "SCO_Pure_GetFloatSmallerFSF"); // 134222756
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetFloatTimesFSF(), "SCO_Pure_GetFloatTimesFSF"); // 1232258005
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntAndFSI(), "SCO_Pure_GetIntAndFSI"); // 3513479201
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntDivideFSI(), "SCO_Pure_GetIntDivideFSI"); // 1450025416
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntEqualFSI(), "SCO_Pure_GetIntEqualFSI"); // 196377697
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterEqualFSI(), "SCO_Pure_GetIntGreaterEqualFSI"); // 851131250
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntGreaterFSI(), "SCO_Pure_GetIntGreaterFSI"); // 71313423
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusEqualFSI(), "SCO_Pure_GetIntMinusEqualFSI"); // 3015491533
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntMinusFSI(), "SCO_Pure_GetIntMinusFSI"); // 1361048507
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntModFSI(), "SCO_Pure_GetIntModFSI"); // 678417253
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntNotEqualFSI(), "SCO_Pure_GetIntNotEqualFSI"); // 3346895971
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntOrFSI(), "SCO_Pure_GetIntOrFSI"); // 1358172982
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntPlusEqualFSI(), "SCO_Pure_GetIntPlusEqualFSI"); // 2867297856
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntPlusFSI(), "SCO_Pure_GetIntPlusFSI"); // 2845381715
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntShiftLFSI(), "SCO_Pure_GetIntShiftLFSI"); // 3977921373
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntShiftRFSI(), "SCO_Pure_GetIntShiftRFSI"); // 81392926
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntSmallerEqualFSI(), "SCO_Pure_GetIntSmallerEqualFSI"); // 2857983134
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntSmallerFSI(), "SCO_Pure_GetIntSmallerFSI"); // 154032665
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntTimesFSI(), "SCO_Pure_GetIntTimesFSI"); // 2779971985
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetIntXorFSI(), "SCO_Pure_GetIntXorFSI"); // 908253047
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameEqualFSN(), "SCO_Pure_GetNameEqualFSN"); // 1099576053
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameGreaterFSN(), "SCO_Pure_GetNameGreaterFSN"); // 3221375456
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameNotEqualFSN(), "SCO_Pure_GetNameNotEqualFSN"); // 1345538828
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNamePlusEqualFSN(), "SCO_Pure_GetNamePlusEqualFSN"); // 3670886808
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNamePlusFSN(), "SCO_Pure_GetNamePlusFSN"); // 153873772
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetNameSmallerFSN(), "SCO_Pure_GetNameSmallerFSN"); // 4022910913
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorDivideFSR(), "SCO_Pure_GetRotatorDivideFSR"); // 3391331027
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorEqualFSR(), "SCO_Pure_GetRotatorEqualFSR"); // 3982977980
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorGreaterEqualFSR(), "SCO_Pure_GetRotatorGreaterEqualFSR"); // 3522035557
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorGreaterFSR(), "SCO_Pure_GetRotatorGreaterFSR"); // 2332209941
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorMinusEqualFSR(), "SCO_Pure_GetRotatorMinusEqualFSR"); // 943520048
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorMinusFSR(), "SCO_Pure_GetRotatorMinusFSR"); // 1006886443
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorModFSR(), "SCO_Pure_GetRotatorModFSR"); // 3901625142
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorNotEqualFSR(), "SCO_Pure_GetRotatorNotEqualFSR"); // 2300529772
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorPlusEqualFSR(), "SCO_Pure_GetRotatorPlusEqualFSR"); // 259349919
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorPlusFSR(), "SCO_Pure_GetRotatorPlusFSR"); // 2614068745
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorSmallerEqualFSR(), "SCO_Pure_GetRotatorSmallerEqualFSR"); // 1005267363
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorSmallerFSR(), "SCO_Pure_GetRotatorSmallerFSR"); // 3757034631
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetRotatorTimesFSR(), "SCO_Pure_GetRotatorTimesFSR"); // 41816607
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolAndBool(), "SCO_Pure_GetSafeBoolAndBool"); // 1671542013
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolAndFSB(), "SCO_Pure_GetSafeBoolAndFSB"); // 3087895099
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolEqualBool(), "SCO_Pure_GetSafeBoolEqualBool"); // 3978379739
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolEqualFSB(), "SCO_Pure_GetSafeBoolEqualFSB"); // 797700524
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolNotEqualBool(), "SCO_Pure_GetSafeBoolNotEqualBool"); // 316704668
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolNotEqualFSB(), "SCO_Pure_GetSafeBoolNotEqualFSB"); // 4115437682
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolOrBool(), "SCO_Pure_GetSafeBoolOrBool"); // 2494148711
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBoolOrFSB(), "SCO_Pure_GetSafeBoolOrFSB"); // 2724036569
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteAndByte(), "SCO_Pure_GetSafeByteAndByte"); // 3750836105
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteAndFSB(), "SCO_Pure_GetSafeByteAndFSB"); // 2260138688
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDecreaseFSB(), "SCO_Pure_GetSafeByteDecreaseFSB"); // 2877397750
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDivideByte(), "SCO_Pure_GetSafeByteDivideByte"); // 2791078803
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteDivideFSB(), "SCO_Pure_GetSafeByteDivideFSB"); // 3689713486
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteEqualByte(), "SCO_Pure_GetSafeByteEqualByte"); // 235939154
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteEqualFSB(), "SCO_Pure_GetSafeByteEqualFSB"); // 3953602747
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterByte(), "SCO_Pure_GetSafeByteGreaterByte"); // 2372101803
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterEqualByte(), "SCO_Pure_GetSafeByteGreaterEqualByte"); // 3834587157
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterEqualFSB(), "SCO_Pure_GetSafeByteGreaterEqualFSB"); // 2879965739
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteGreaterFSB(), "SCO_Pure_GetSafeByteGreaterFSB"); // 1662496966
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteIncreaseFSB(), "SCO_Pure_GetSafeByteIncreaseFSB"); // 1820818286
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusByte(), "SCO_Pure_GetSafeByteMinusByte"); // 2938327119
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusEqualByte(), "SCO_Pure_GetSafeByteMinusEqualByte"); // 2704211296
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusEqualFSB(), "SCO_Pure_GetSafeByteMinusEqualFSB"); // 3572814731
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteMinusFSB(), "SCO_Pure_GetSafeByteMinusFSB"); // 2446398903
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteModByte(), "SCO_Pure_GetSafeByteModByte"); // 2200833393
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteModFSB(), "SCO_Pure_GetSafeByteModFSB"); // 3532958244
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotByte(), "SCO_Pure_GetSafeByteNotByte"); // 3762575151
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotEqualByte(), "SCO_Pure_GetSafeByteNotEqualByte"); // 1304723293
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotEqualFSB(), "SCO_Pure_GetSafeByteNotEqualFSB"); // 633278903
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteNotFSB(), "SCO_Pure_GetSafeByteNotFSB"); // 777276831
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteOrByte(), "SCO_Pure_GetSafeByteOrByte"); // 1048491457
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteOrFSB(), "SCO_Pure_GetSafeByteOrFSB"); // 1094408210
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusByte(), "SCO_Pure_GetSafeBytePlusByte"); // 812993311
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusEqualByte(), "SCO_Pure_GetSafeBytePlusEqualByte"); // 2649457188
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusEqualFSB(), "SCO_Pure_GetSafeBytePlusEqualFSB"); // 1029864816
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeBytePlusFSB(), "SCO_Pure_GetSafeBytePlusFSB"); // 4060573014
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftLByte(), "SCO_Pure_GetSafeByteShiftLByte"); // 1910378954
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftLFSB(), "SCO_Pure_GetSafeByteShiftLFSB"); // 1521293197
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftRByte(), "SCO_Pure_GetSafeByteShiftRByte"); // 1869196770
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteShiftRFSB(), "SCO_Pure_GetSafeByteShiftRFSB"); // 1708965947
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerByte(), "SCO_Pure_GetSafeByteSmallerByte"); // 604345825
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerEqualByte(), "SCO_Pure_GetSafeByteSmallerEqualByte"); // 1862271218
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerEqualFSB(), "SCO_Pure_GetSafeByteSmallerEqualFSB"); // 1770990916
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteSmallerFSB(), "SCO_Pure_GetSafeByteSmallerFSB"); // 2603397914
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteTimesByte(), "SCO_Pure_GetSafeByteTimesByte"); // 1642399927
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteTimesFSB(), "SCO_Pure_GetSafeByteTimesFSB"); // 1250547681
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteXorByte(), "SCO_Pure_GetSafeByteXorByte"); // 1194528056
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeByteXorFSB(), "SCO_Pure_GetSafeByteXorFSB"); // 2677987862
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorEqualColor(), "SCO_Pure_GetSafeColorEqualColor"); // 1447769191
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorEqualFSC(), "SCO_Pure_GetSafeColorEqualFSC"); // 2596737798
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorNotEqualColor(), "SCO_Pure_GetSafeColorNotEqualColor"); // 2056492470
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeColorNotEqualFSC(), "SCO_Pure_GetSafeColorNotEqualFSC"); // 893661717
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDecreaseFSF(), "SCO_Pure_GetSafeFloatDecreaseFSF"); // 1340203507
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDivideFloat(), "SCO_Pure_GetSafeFloatDivideFloat"); // 2649517449
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatDivideFSF(), "SCO_Pure_GetSafeFloatDivideFSF"); // 3157206476
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatEqualFloat(), "SCO_Pure_GetSafeFloatEqualFloat"); // 2042974401
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatEqualFSF(), "SCO_Pure_GetSafeFloatEqualFSF"); // 2367699580
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterEqualFloat(), "SCO_Pure_GetSafeFloatGreaterEqualFloat"); // 648140246
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterEqualFSF(), "SCO_Pure_GetSafeFloatGreaterEqualFSF"); // 3720440398
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterFloat(), "SCO_Pure_GetSafeFloatGreaterFloat"); // 1979434823
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatGreaterFSF(), "SCO_Pure_GetSafeFloatGreaterFSF"); // 3273787914
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatIncreaseFSF(), "SCO_Pure_GetSafeFloatIncreaseFSF"); // 717879880
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusEqualFloat(), "SCO_Pure_GetSafeFloatMinusEqualFloat"); // 3143845700
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusEqualFSF(), "SCO_Pure_GetSafeFloatMinusEqualFSF"); // 4206576360
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusFloat(), "SCO_Pure_GetSafeFloatMinusFloat"); // 26133180
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatMinusFSF(), "SCO_Pure_GetSafeFloatMinusFSF"); // 2692726213
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatModFloat(), "SCO_Pure_GetSafeFloatModFloat"); // 1827719466
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatModFSF(), "SCO_Pure_GetSafeFloatModFSF"); // 2956190398
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatNotEqualFloat(), "SCO_Pure_GetSafeFloatNotEqualFloat"); // 3931053458
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatNotEqualFSF(), "SCO_Pure_GetSafeFloatNotEqualFSF"); // 2633389195
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusEqualFloat(), "SCO_Pure_GetSafeFloatPlusEqualFloat"); // 379204504
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusEqualFSF(), "SCO_Pure_GetSafeFloatPlusEqualFSF"); // 3163839862
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusFloat(), "SCO_Pure_GetSafeFloatPlusFloat"); // 526649128
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatPlusFSF(), "SCO_Pure_GetSafeFloatPlusFSF"); // 1773822803
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerEqualFloat(), "SCO_Pure_GetSafeFloatSmallerEqualFloat"); // 31893897
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerEqualFSF(), "SCO_Pure_GetSafeFloatSmallerEqualFSF"); // 3638204492
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerFloat(), "SCO_Pure_GetSafeFloatSmallerFloat"); // 1569334435
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatSmallerFSF(), "SCO_Pure_GetSafeFloatSmallerFSF"); // 4011880245
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatTimesFloat(), "SCO_Pure_GetSafeFloatTimesFloat"); // 393565476
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeFloatTimesFSF(), "SCO_Pure_GetSafeFloatTimesFSF"); // 2977092854
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntAndFSI(), "SCO_Pure_GetSafeIntAndFSI"); // 2500041347
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntAndInt(), "SCO_Pure_GetSafeIntAndInt"); // 1657558060
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDecreaseFSI(), "SCO_Pure_GetSafeIntDecreaseFSI"); // 1960724126
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDivideFSI(), "SCO_Pure_GetSafeIntDivideFSI"); // 2094007085
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntDivideInt(), "SCO_Pure_GetSafeIntDivideInt"); // 2713618165
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntEqualFSI(), "SCO_Pure_GetSafeIntEqualFSI"); // 1255995397
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntEqualInt(), "SCO_Pure_GetSafeIntEqualInt"); // 161640699
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterEqualFSI(), "SCO_Pure_GetSafeIntGreaterEqualFSI"); // 3450217157
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterEqualInt(), "SCO_Pure_GetSafeIntGreaterEqualInt"); // 1935655216
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterFSI(), "SCO_Pure_GetSafeIntGreaterFSI"); // 2184690927
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntGreaterInt(), "SCO_Pure_GetSafeIntGreaterInt"); // 2804144196
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntIncreaseFSI(), "SCO_Pure_GetSafeIntIncreaseFSI"); // 2550433653
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusEqualFSI(), "SCO_Pure_GetSafeIntMinusEqualFSI"); // 748699657
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusEqualInt(), "SCO_Pure_GetSafeIntMinusEqualInt"); // 3587169996
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusFSI(), "SCO_Pure_GetSafeIntMinusFSI"); // 2476508979
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntMinusInt(), "SCO_Pure_GetSafeIntMinusInt"); // 4248811373
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntModFSI(), "SCO_Pure_GetSafeIntModFSI"); // 3035877493
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntModInt(), "SCO_Pure_GetSafeIntModInt"); // 3993547158
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotEqualFSI(), "SCO_Pure_GetSafeIntNotEqualFSI"); // 1806540816
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotEqualInt(), "SCO_Pure_GetSafeIntNotEqualInt"); // 1026429534
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotFSI(), "SCO_Pure_GetSafeIntNotFSI"); // 1341409452
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntNotInt(), "SCO_Pure_GetSafeIntNotInt"); // 1550927171
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntOrFSI(), "SCO_Pure_GetSafeIntOrFSI"); // 1518303051
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntOrInt(), "SCO_Pure_GetSafeIntOrInt"); // 3722816221
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusEqualFSI(), "SCO_Pure_GetSafeIntPlusEqualFSI"); // 3966076043
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusEqualInt(), "SCO_Pure_GetSafeIntPlusEqualInt"); // 484979829
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusFSI(), "SCO_Pure_GetSafeIntPlusFSI"); // 3380367347
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntPlusInt(), "SCO_Pure_GetSafeIntPlusInt"); // 2021733291
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftLFSI(), "SCO_Pure_GetSafeIntShiftLFSI"); // 2252077723
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftLInt(), "SCO_Pure_GetSafeIntShiftLInt"); // 2007008039
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftRFSI(), "SCO_Pure_GetSafeIntShiftRFSI"); // 1561131972
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntShiftRInt(), "SCO_Pure_GetSafeIntShiftRInt"); // 545176285
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerEqualFSI(), "SCO_Pure_GetSafeIntSmallerEqualFSI"); // 706763751
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerEqualInt(), "SCO_Pure_GetSafeIntSmallerEqualInt"); // 3538558591
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerFSI(), "SCO_Pure_GetSafeIntSmallerFSI"); // 716493318
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntSmallerInt(), "SCO_Pure_GetSafeIntSmallerInt"); // 1520172837
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntTimesFSI(), "SCO_Pure_GetSafeIntTimesFSI"); // 3503826214
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntTimesInt(), "SCO_Pure_GetSafeIntTimesInt"); // 3733862998
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntXorFSI(), "SCO_Pure_GetSafeIntXorFSI"); // 3777660925
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeIntXorInt(), "SCO_Pure_GetSafeIntXorInt"); // 2996311364
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameEqualFSN(), "SCO_Pure_GetSafeNameEqualFSN"); // 3041514586
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameEqualName(), "SCO_Pure_GetSafeNameEqualName"); // 2221446880
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameGreaterFSN(), "SCO_Pure_GetSafeNameGreaterFSN"); // 2814437701
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameGreaterName(), "SCO_Pure_GetSafeNameGreaterName"); // 1601366039
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameNotEqualFSN(), "SCO_Pure_GetSafeNameNotEqualFSN"); // 3704285827
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameNotEqualName(), "SCO_Pure_GetSafeNameNotEqualName"); // 1687624325
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusEqualFSN(), "SCO_Pure_GetSafeNamePlusEqualFSN"); // 3206314028
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusEqualName(), "SCO_Pure_GetSafeNamePlusEqualName"); // 1752853583
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusFSN(), "SCO_Pure_GetSafeNamePlusFSN"); // 9279424
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNamePlusName(), "SCO_Pure_GetSafeNamePlusName"); // 2404508379
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameSmallerFSN(), "SCO_Pure_GetSafeNameSmallerFSN"); // 2857769556
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeNameSmallerName(), "SCO_Pure_GetSafeNameSmallerName"); // 3429066589
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDecreaseFSR(), "SCO_Pure_GetSafeRotatorDecreaseFSR"); // 27294531
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDivideFSR(), "SCO_Pure_GetSafeRotatorDivideFSR"); // 3964848431
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorDivideRotator(), "SCO_Pure_GetSafeRotatorDivideRotator"); // 3326206501
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorEqualFSR(), "SCO_Pure_GetSafeRotatorEqualFSR"); // 142031961
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorEqualRotator(), "SCO_Pure_GetSafeRotatorEqualRotator"); // 73110164
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterEqualFSR(), "SCO_Pure_GetSafeRotatorGreaterEqualFSR"); // 1118665292
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterEqualRotator(), "SCO_Pure_GetSafeRotatorGreaterEqualRotator"); // 3870857869
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterFSR(), "SCO_Pure_GetSafeRotatorGreaterFSR"); // 4293556561
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorGreaterRotator(), "SCO_Pure_GetSafeRotatorGreaterRotator"); // 2931463888
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorIncreaseFSR(), "SCO_Pure_GetSafeRotatorIncreaseFSR"); // 272959090
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusEqualFSR(), "SCO_Pure_GetSafeRotatorMinusEqualFSR"); // 2871636398
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusEqualRotator(), "SCO_Pure_GetSafeRotatorMinusEqualRotator"); // 3304247842
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusFSR(), "SCO_Pure_GetSafeRotatorMinusFSR"); // 1779096363
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorMinusRotator(), "SCO_Pure_GetSafeRotatorMinusRotator"); // 2031339830
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorModFSR(), "SCO_Pure_GetSafeRotatorModFSR"); // 758322392
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorModRotator(), "SCO_Pure_GetSafeRotatorModRotator"); // 544106692
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorNotEqualFSR(), "SCO_Pure_GetSafeRotatorNotEqualFSR"); // 781780136
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorNotEqualRotator(), "SCO_Pure_GetSafeRotatorNotEqualRotator"); // 3126723529
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusEqualFSR(), "SCO_Pure_GetSafeRotatorPlusEqualFSR"); // 2488513674
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusEqualRotator(), "SCO_Pure_GetSafeRotatorPlusEqualRotator"); // 2853616153
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusFSR(), "SCO_Pure_GetSafeRotatorPlusFSR"); // 2325089082
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorPlusRotator(), "SCO_Pure_GetSafeRotatorPlusRotator"); // 3688307243
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerEqualFSR(), "SCO_Pure_GetSafeRotatorSmallerEqualFSR"); // 447950339
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerEqualRotator(), "SCO_Pure_GetSafeRotatorSmallerEqualRotator"); // 1594219575
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerFSR(), "SCO_Pure_GetSafeRotatorSmallerFSR"); // 2547442164
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorSmallerRotator(), "SCO_Pure_GetSafeRotatorSmallerRotator"); // 3809007369
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorTimesFSR(), "SCO_Pure_GetSafeRotatorTimesFSR"); // 944263784
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeRotatorTimesRotator(), "SCO_Pure_GetSafeRotatorTimesRotator"); // 537281264
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringEqualFSS(), "SCO_Pure_GetSafeStringEqualFSS"); // 455354968
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringEqualString(), "SCO_Pure_GetSafeStringEqualString"); // 1953015560
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringGreaterFSS(), "SCO_Pure_GetSafeStringGreaterFSS"); // 349484852
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringGreaterString(), "SCO_Pure_GetSafeStringGreaterString"); // 2757579021
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringNotEqualFSS(), "SCO_Pure_GetSafeStringNotEqualFSS"); // 1814009446
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringNotEqualString(), "SCO_Pure_GetSafeStringNotEqualString"); // 2262454718
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusEqualFSS(), "SCO_Pure_GetSafeStringPlusEqualFSS"); // 118552371
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusEqualString(), "SCO_Pure_GetSafeStringPlusEqualString"); // 690139466
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusFSS(), "SCO_Pure_GetSafeStringPlusFSS"); // 2290205769
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringPlusString(), "SCO_Pure_GetSafeStringPlusString"); // 2243479760
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringSmallerFSS(), "SCO_Pure_GetSafeStringSmallerFSS"); // 3086031257
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeStringSmallerString(), "SCO_Pure_GetSafeStringSmallerString"); // 3016873847
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextEqualFST(), "SCO_Pure_GetSafeTextEqualFST"); // 2951409090
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextEqualText(), "SCO_Pure_GetSafeTextEqualText"); // 784267344
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextGreaterFST(), "SCO_Pure_GetSafeTextGreaterFST"); // 149541297
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextGreaterText(), "SCO_Pure_GetSafeTextGreaterText"); // 12129040
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextNotEqualFST(), "SCO_Pure_GetSafeTextNotEqualFST"); // 8746179
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextNotEqualText(), "SCO_Pure_GetSafeTextNotEqualText"); // 3636587131
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusEqualFST(), "SCO_Pure_GetSafeTextPlusEqualFST"); // 2415268673
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusEqualText(), "SCO_Pure_GetSafeTextPlusEqualText"); // 3847647231
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusFST(), "SCO_Pure_GetSafeTextPlusFST"); // 1205718108
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextPlusText(), "SCO_Pure_GetSafeTextPlusText"); // 1823666723
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextSmallerFST(), "SCO_Pure_GetSafeTextSmallerFST"); // 1485412561
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTextSmallerText(), "SCO_Pure_GetSafeTextSmallerText"); // 3608853558
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformEqualFST(), "SCO_Pure_GetSafeTransformEqualFST"); // 1996756852
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformEqualTransform(), "SCO_Pure_GetSafeTransformEqualTransform"); // 704966673
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformNotEqualFST(), "SCO_Pure_GetSafeTransformNotEqualFST"); // 1389595636
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeTransformNotEqualTransform(), "SCO_Pure_GetSafeTransformNotEqualTransform"); // 3159636655
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDecreaseFSV(), "SCO_Pure_GetSafeVector2DDecreaseFSV"); // 1953893596
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDivideFSV(), "SCO_Pure_GetSafeVector2DDivideFSV"); // 1322336389
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DDivideVector2D(), "SCO_Pure_GetSafeVector2DDivideVector2D"); // 1759924786
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DEqualFSV(), "SCO_Pure_GetSafeVector2DEqualFSV"); // 1944890681
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DEqualVector2D(), "SCO_Pure_GetSafeVector2DEqualVector2D"); // 1016465742
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterEqualFSV(), "SCO_Pure_GetSafeVector2DGreaterEqualFSV"); // 123871140
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterEqualVector2D(), "SCO_Pure_GetSafeVector2DGreaterEqualVector2D"); // 576403763
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterFSV(), "SCO_Pure_GetSafeVector2DGreaterFSV"); // 2641163873
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DGreaterVector2D(), "SCO_Pure_GetSafeVector2DGreaterVector2D"); // 3780172663
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DIncreaseFSV(), "SCO_Pure_GetSafeVector2DIncreaseFSV"); // 279080072
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusEqualFSV(), "SCO_Pure_GetSafeVector2DMinusEqualFSV"); // 1564479661
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusEqualVector2D(), "SCO_Pure_GetSafeVector2DMinusEqualVector2D"); // 1908111803
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusFSV(), "SCO_Pure_GetSafeVector2DMinusFSV"); // 3394360990
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DMinusVector2D(), "SCO_Pure_GetSafeVector2DMinusVector2D"); // 581984805
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DModFSV(), "SCO_Pure_GetSafeVector2DModFSV"); // 4202275281
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DModVector2D(), "SCO_Pure_GetSafeVector2DModVector2D"); // 226445275
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DNotEqualFSV(), "SCO_Pure_GetSafeVector2DNotEqualFSV"); // 1335846223
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DNotEqualVector2D(), "SCO_Pure_GetSafeVector2DNotEqualVector2D"); // 3285831313
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusEqualFSV(), "SCO_Pure_GetSafeVector2DPlusEqualFSV"); // 1792547266
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusEqualVector2D(), "SCO_Pure_GetSafeVector2DPlusEqualVector2D"); // 1997388283
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusFSV(), "SCO_Pure_GetSafeVector2DPlusFSV"); // 1143432132
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DPlusVector2D(), "SCO_Pure_GetSafeVector2DPlusVector2D"); // 3525967660
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerEqualFSV(), "SCO_Pure_GetSafeVector2DSmallerEqualFSV"); // 871181866
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerEqualVector2D(), "SCO_Pure_GetSafeVector2DSmallerEqualVector2D"); // 3962520531
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerFSV(), "SCO_Pure_GetSafeVector2DSmallerFSV"); // 2095949363
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DSmallerVector2D(), "SCO_Pure_GetSafeVector2DSmallerVector2D"); // 728107960
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DTimesFSV(), "SCO_Pure_GetSafeVector2DTimesFSV"); // 315002127
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector2DTimesVector2D(), "SCO_Pure_GetSafeVector2DTimesVector2D"); // 2484486249
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDecreaseFSV(), "SCO_Pure_GetSafeVector3DDecreaseFSV"); // 679033393
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDivideFSV(), "SCO_Pure_GetSafeVector3DDivideFSV"); // 180276429
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DDivideVector3D(), "SCO_Pure_GetSafeVector3DDivideVector3D"); // 1942814140
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DEqualFSV(), "SCO_Pure_GetSafeVector3DEqualFSV"); // 3499593265
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DEqualVector3D(), "SCO_Pure_GetSafeVector3DEqualVector3D"); // 3945328982
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterEqualFSV(), "SCO_Pure_GetSafeVector3DGreaterEqualFSV"); // 1737501249
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterEqualVector3D(), "SCO_Pure_GetSafeVector3DGreaterEqualVector3D"); // 3945914510
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterFSV(), "SCO_Pure_GetSafeVector3DGreaterFSV"); // 3084982631
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DGreaterVector3D(), "SCO_Pure_GetSafeVector3DGreaterVector3D"); // 251833771
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DIncreaseFSV(), "SCO_Pure_GetSafeVector3DIncreaseFSV"); // 2136234312
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusEqualFSV(), "SCO_Pure_GetSafeVector3DMinusEqualFSV"); // 655477016
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusEqualVector3D(), "SCO_Pure_GetSafeVector3DMinusEqualVector3D"); // 437912788
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusFSV(), "SCO_Pure_GetSafeVector3DMinusFSV"); // 1728039805
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DMinusVector3D(), "SCO_Pure_GetSafeVector3DMinusVector3D"); // 355500623
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DModFSV(), "SCO_Pure_GetSafeVector3DModFSV"); // 646898526
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DModVector3D(), "SCO_Pure_GetSafeVector3DModVector3D"); // 4272956550
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DNotEqualFSV(), "SCO_Pure_GetSafeVector3DNotEqualFSV"); // 3246203066
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DNotEqualVector3D(), "SCO_Pure_GetSafeVector3DNotEqualVector3D"); // 3580569456
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusEqualFSV(), "SCO_Pure_GetSafeVector3DPlusEqualFSV"); // 2318021389
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusEqualVector3D(), "SCO_Pure_GetSafeVector3DPlusEqualVector3D"); // 3312273728
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusFSV(), "SCO_Pure_GetSafeVector3DPlusFSV"); // 1972757398
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DPlusVector3D(), "SCO_Pure_GetSafeVector3DPlusVector3D"); // 8274468
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerEqualFSV(), "SCO_Pure_GetSafeVector3DSmallerEqualFSV"); // 1507518275
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerEqualVector3D(), "SCO_Pure_GetSafeVector3DSmallerEqualVector3D"); // 1641555388
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerFSV(), "SCO_Pure_GetSafeVector3DSmallerFSV"); // 2355070401
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DSmallerVector3D(), "SCO_Pure_GetSafeVector3DSmallerVector3D"); // 3012397383
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DTimesFSV(), "SCO_Pure_GetSafeVector3DTimesFSV"); // 1095631075
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector3DTimesVector3D(), "SCO_Pure_GetSafeVector3DTimesVector3D"); // 3549089012
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDecreaseFSV(), "SCO_Pure_GetSafeVector4DDecreaseFSV"); // 3371423010
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDivideFSV(), "SCO_Pure_GetSafeVector4DDivideFSV"); // 1164536866
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DDivideVector4D(), "SCO_Pure_GetSafeVector4DDivideVector4D"); // 1179432945
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DEqualFSV(), "SCO_Pure_GetSafeVector4DEqualFSV"); // 3048554960
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DEqualVector4D(), "SCO_Pure_GetSafeVector4DEqualVector4D"); // 3044722883
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterEqualFSV(), "SCO_Pure_GetSafeVector4DGreaterEqualFSV"); // 1099939405
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterEqualVector4D(), "SCO_Pure_GetSafeVector4DGreaterEqualVector4D"); // 1497546506
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterFSV(), "SCO_Pure_GetSafeVector4DGreaterFSV"); // 1648399477
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DGreaterVector4D(), "SCO_Pure_GetSafeVector4DGreaterVector4D"); // 2694868297
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DIncreaseFSV(), "SCO_Pure_GetSafeVector4DIncreaseFSV"); // 1669558766
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusEqualFSV(), "SCO_Pure_GetSafeVector4DMinusEqualFSV"); // 250414625
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusEqualVector4D(), "SCO_Pure_GetSafeVector4DMinusEqualVector4D"); // 685229372
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusFSV(), "SCO_Pure_GetSafeVector4DMinusFSV"); // 3145562303
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DMinusVector4D(), "SCO_Pure_GetSafeVector4DMinusVector4D"); // 1379935527
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DModFSV(), "SCO_Pure_GetSafeVector4DModFSV"); // 2400773453
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DModVector4D(), "SCO_Pure_GetSafeVector4DModVector4D"); // 1690182935
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DNotEqualFSV(), "SCO_Pure_GetSafeVector4DNotEqualFSV"); // 1687281576
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DNotEqualVector4D(), "SCO_Pure_GetSafeVector4DNotEqualVector4D"); // 3115439062
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusEqualFSV(), "SCO_Pure_GetSafeVector4DPlusEqualFSV"); // 1266065466
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusEqualVector4D(), "SCO_Pure_GetSafeVector4DPlusEqualVector4D"); // 3701491282
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusFSV(), "SCO_Pure_GetSafeVector4DPlusFSV"); // 1473451878
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DPlusVector4D(), "SCO_Pure_GetSafeVector4DPlusVector4D"); // 2476355005
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerEqualFSV(), "SCO_Pure_GetSafeVector4DSmallerEqualFSV"); // 1268548843
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerEqualVector4D(), "SCO_Pure_GetSafeVector4DSmallerEqualVector4D"); // 1530996180
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerFSV(), "SCO_Pure_GetSafeVector4DSmallerFSV"); // 1455641969
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DSmallerVector4D(), "SCO_Pure_GetSafeVector4DSmallerVector4D"); // 4094984230
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DTimesFSV(), "SCO_Pure_GetSafeVector4DTimesFSV"); // 232365934
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetSafeVector4DTimesVector4D(), "SCO_Pure_GetSafeVector4DTimesVector4D"); // 901575977
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringEqualFSS(), "SCO_Pure_GetStringEqualFSS"); // 2511706708
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringGreaterFSS(), "SCO_Pure_GetStringGreaterFSS"); // 1409896349
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringNotEqualFSS(), "SCO_Pure_GetStringNotEqualFSS"); // 1738513284
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringPlusEqualFSS(), "SCO_Pure_GetStringPlusEqualFSS"); // 1542401692
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringPlusFSS(), "SCO_Pure_GetStringPlusFSS"); // 3958128646
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetStringSmallerFSS(), "SCO_Pure_GetStringSmallerFSS"); // 3878922433
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextEqualFST(), "SCO_Pure_GetTextEqualFST"); // 3862986563
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextGreaterFST(), "SCO_Pure_GetTextGreaterFST"); // 3087829721
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextNotEqualFST(), "SCO_Pure_GetTextNotEqualFST"); // 1689446407
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextPlusEqualFST(), "SCO_Pure_GetTextPlusEqualFST"); // 765604591
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextPlusFST(), "SCO_Pure_GetTextPlusFST"); // 3162079945
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTextSmallerFST(), "SCO_Pure_GetTextSmallerFST"); // 257324872
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTransformEqualFST(), "SCO_Pure_GetTransformEqualFST"); // 640499539
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetTransformNotEqualFST(), "SCO_Pure_GetTransformNotEqualFST"); // 1376424971
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DDivideFSV(), "SCO_Pure_GetVector2DDivideFSV"); // 1935164109
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DEqualFSV(), "SCO_Pure_GetVector2DEqualFSV"); // 2120103083
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DGreaterEqualFSV(), "SCO_Pure_GetVector2DGreaterEqualFSV"); // 3631531766
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DGreaterFSV(), "SCO_Pure_GetVector2DGreaterFSV"); // 3450923378
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DMinusEqualFSV(), "SCO_Pure_GetVector2DMinusEqualFSV"); // 2128608142
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DMinusFSV(), "SCO_Pure_GetVector2DMinusFSV"); // 2742428901
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DModFSV(), "SCO_Pure_GetVector2DModFSV"); // 3140825984
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DNotEqualFSV(), "SCO_Pure_GetVector2DNotEqualFSV"); // 980117818
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DPlusEqualFSV(), "SCO_Pure_GetVector2DPlusEqualFSV"); // 3462463592
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DPlusFSV(), "SCO_Pure_GetVector2DPlusFSV"); // 4004317633
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DSmallerEqualFSV(), "SCO_Pure_GetVector2DSmallerEqualFSV"); // 647879539
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DSmallerFSV(), "SCO_Pure_GetVector2DSmallerFSV"); // 2124315103
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector2DTimesFSV(), "SCO_Pure_GetVector2DTimesFSV"); // 1126927885
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DDivideFSV(), "SCO_Pure_GetVector3DDivideFSV"); // 2152667396
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DEqualFSV(), "SCO_Pure_GetVector3DEqualFSV"); // 3440937632
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DGreaterEqualFSV(), "SCO_Pure_GetVector3DGreaterEqualFSV"); // 1073018246
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DGreaterFSV(), "SCO_Pure_GetVector3DGreaterFSV"); // 332497653
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DMinusEqualFSV(), "SCO_Pure_GetVector3DMinusEqualFSV"); // 511575040
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DMinusFSV(), "SCO_Pure_GetVector3DMinusFSV"); // 1983031122
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DModFSV(), "SCO_Pure_GetVector3DModFSV"); // 2032537123
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DNotEqualFSV(), "SCO_Pure_GetVector3DNotEqualFSV"); // 369169428
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DPlusEqualFSV(), "SCO_Pure_GetVector3DPlusEqualFSV"); // 2441788638
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DPlusFSV(), "SCO_Pure_GetVector3DPlusFSV"); // 1890262856
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DSmallerEqualFSV(), "SCO_Pure_GetVector3DSmallerEqualFSV"); // 2563116525
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DSmallerFSV(), "SCO_Pure_GetVector3DSmallerFSV"); // 2279320100
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector3DTimesFSV(), "SCO_Pure_GetVector3DTimesFSV"); // 318842873
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DDivideFSV(), "SCO_Pure_GetVector4DDivideFSV"); // 2293127291
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DEqualFSV(), "SCO_Pure_GetVector4DEqualFSV"); // 3768489186
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DGreaterEqualFSV(), "SCO_Pure_GetVector4DGreaterEqualFSV"); // 270821170
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DGreaterFSV(), "SCO_Pure_GetVector4DGreaterFSV"); // 2185308691
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DMinusEqualFSV(), "SCO_Pure_GetVector4DMinusEqualFSV"); // 3639358292
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DMinusFSV(), "SCO_Pure_GetVector4DMinusFSV"); // 1141571171
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DModFSV(), "SCO_Pure_GetVector4DModFSV"); // 3981823949
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DNotEqualFSV(), "SCO_Pure_GetVector4DNotEqualFSV"); // 1125508081
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DPlusEqualFSV(), "SCO_Pure_GetVector4DPlusEqualFSV"); // 3610177479
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DPlusFSV(), "SCO_Pure_GetVector4DPlusFSV"); // 3291225340
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DSmallerEqualFSV(), "SCO_Pure_GetVector4DSmallerEqualFSV"); // 2430481448
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DSmallerFSV(), "SCO_Pure_GetVector4DSmallerFSV"); // 2440996715
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_GetVector4DTimesFSV(), "SCO_Pure_GetVector4DTimesFSV"); // 378891464
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetBoolEqualFSB(), "SCO_Pure_SetBoolEqualFSB"); // 1022667251
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetByteEqualFSB(), "SCO_Pure_SetByteEqualFSB"); // 168526732
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetColorEqualFSC(), "SCO_Pure_SetColorEqualFSC"); // 2819173198
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetFloatEqualFSF(), "SCO_Pure_SetFloatEqualFSF"); // 1584567728
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetIntEqualFSI(), "SCO_Pure_SetIntEqualFSI"); // 349611724
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetNameEqualFSN(), "SCO_Pure_SetNameEqualFSN"); // 1004743555
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetRotatorEqualFSR(), "SCO_Pure_SetRotatorEqualFSR"); // 2908969194
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeBoolEqualBool(), "SCO_Pure_SetSafeBoolEqualBool"); // 103679115
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeBoolEqualFSB(), "SCO_Pure_SetSafeBoolEqualFSB"); // 2968967417
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeByteEqualByte(), "SCO_Pure_SetSafeByteEqualByte"); // 1602354238
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeByteEqualFSB(), "SCO_Pure_SetSafeByteEqualFSB"); // 3457068286
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeColorEqualColor(), "SCO_Pure_SetSafeColorEqualColor"); // 2071829248
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeColorEqualFSC(), "SCO_Pure_SetSafeColorEqualFSC"); // 977477916
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeFloatEqualFloat(), "SCO_Pure_SetSafeFloatEqualFloat"); // 3691712444
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeFloatEqualFSF(), "SCO_Pure_SetSafeFloatEqualFSF"); // 243581553
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeIntEqualFSI(), "SCO_Pure_SetSafeIntEqualFSI"); // 3755534734
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeIntEqualInt(), "SCO_Pure_SetSafeIntEqualInt"); // 2989080656
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeNameEqualFSN(), "SCO_Pure_SetSafeNameEqualFSN"); // 2549937609
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeNameEqualName(), "SCO_Pure_SetSafeNameEqualName"); // 3427910870
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeRotatorEqualFSR(), "SCO_Pure_SetSafeRotatorEqualFSR"); // 597542394
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeRotatorEqualRotator(), "SCO_Pure_SetSafeRotatorEqualRotator"); // 211357221
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeStringEqualFSS(), "SCO_Pure_SetSafeStringEqualFSS"); // 2551612777
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeStringEqualString(), "SCO_Pure_SetSafeStringEqualString"); // 4118334720
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTextEqualFST(), "SCO_Pure_SetSafeTextEqualFST"); // 3491989773
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTextEqualText(), "SCO_Pure_SetSafeTextEqualText"); // 1252972762
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTransformEqualFST(), "SCO_Pure_SetSafeTransformEqualFST"); // 4187981307
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeTransformEqualTransform(), "SCO_Pure_SetSafeTransformEqualTransform"); // 1064081348
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector2DEqualFSV(), "SCO_Pure_SetSafeVector2DEqualFSV"); // 2886851733
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector2DEqualVector2D(), "SCO_Pure_SetSafeVector2DEqualVector2D"); // 4252086293
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector3DEqualFSV(), "SCO_Pure_SetSafeVector3DEqualFSV"); // 1316138601
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector3DEqualVector3D(), "SCO_Pure_SetSafeVector3DEqualVector3D"); // 1906237170
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector4DEqualFSV(), "SCO_Pure_SetSafeVector4DEqualFSV"); // 1115260744
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetSafeVector4DEqualVector4D(), "SCO_Pure_SetSafeVector4DEqualVector4D"); // 170780685
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetStringEqualFSS(), "SCO_Pure_SetStringEqualFSS"); // 515316615
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetTextEqualFST(), "SCO_Pure_SetTextEqualFST"); // 3168675851
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetTransformEqualFST(), "SCO_Pure_SetTransformEqualFST"); // 3002995495
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector2DEqualFSV(), "SCO_Pure_SetVector2DEqualFSV"); // 3966141545
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector3DEqualFSV(), "SCO_Pure_SetVector3DEqualFSV"); // 2576632073
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USCLibrary_SCO_Pure_SetVector4DEqualFSV(), "SCO_Pure_SetVector4DEqualFSV"); // 451078180
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Blueprints/SCLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Blueprints/SCLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USCLibrary(Z_Construct_UClass_USCLibrary, &USCLibrary::StaticClass, TEXT("USCLibrary"), false, nullptr, nullptr, nullptr);
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
